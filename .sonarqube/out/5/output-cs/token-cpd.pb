À≈
hC:\Users\Matthieu\source\repos\HeroBot-deux-point-z√©ro\HeroBot.Plugins.HeroBot\Modules\HeroBotModule.cs
	namespace 	
HeroBot
 
. 
Plugins 
. 
HeroBot !
.! "
Modules" )
{ 
[ 

NeedPlugin 
( 
) 
] 
[ 
Cooldown 
( 
$num 
) 
] 
[ 
Name 	
(	 

$str
 
) 
] 
public 

class 
HeroBotModule 
:  

ModuleBase! +
<+ , 
SocketCommandContext, @
>@ A
{ 
private 
readonly 
CommandService '
_service( 0
;0 1
private 
readonly 
IConfigurationRoot +
_config, 3
;3 4
private 
readonly 
IServiceProvider )
	_provider* 3
;3 4
private   
readonly   
IModulesService   (
_modules  ) 1
;  1 2
public"" 
HeroBotModule"" 
("" 
CommandService"" +
service"", 3
,""3 4
IConfigurationRoot""5 G
config""H N
,""N O
IServiceProvider""P `
serviceProvider""a p
,""p q
IModulesService	""q Ä
_module
""Å à
)
""à â
{## 	
_service$$ 
=$$ 
service$$ 
;$$ 
_config%% 
=%% 
config%% 
;%% 
	_provider&& 
=&& 
serviceProvider&& '
;&&' (
_modules'' 
='' 
_module'' 
;'' 
}(( 	
[** 	
Command**	 
(** 
$str** 
)** 
,** 
Alias** 
(**  
new**  #
[**# $
]**$ %
{**& '
$str**( +
,**+ ,
$str**- 1
,**1 2
$str**3 8
}**9 :
)**: ;
,**; <
Summary**< C
(**C D
$str**D x
)**x y
]**y z
public++ 
async++ 
Task++ 
HelpCommandAsync++ *
(++* +
[+++ ,
	Remainder++, 5
]++5 6
string++6 <
command++= D
=++E F
null++G K
)++K L
{,, 	
string-- 
prefix-- 
=-- 
_config-- #
[--# $
$str--$ ,
]--, -
;--- .
var.. 
builder.. 
=.. 
new.. 
EmbedBuilder.. *
(..* +
)..+ ,
;.., -
builder// 
.// 
AddField// 
(// 
$str// *
,//* +
$str	//, ë
,
//ë í
false
//ì ò
)
//ò ô
.00 
WithDescription00 
(00 
$str	00 •
)
00• ¶
.11 

WithAuthor11 
(11 
Context11 
.11  
User11  $
)11$ %
.22 
WithThumbnailUrl22 
(22 
$str22 z
)22z {
.33 
WithRandomColor33 
(33 
)33 
.33 
WithCopyrightFooter33 2
(332 3
Context333 :
.33: ;
User33; ?
.33? @
Username33@ H
,33H I
$str33J P
)33P Q
;33Q R
if55 
(55 
command55 
!=55 
null55 
)55  
{66 
var77 
result77 
=77 
_service77 %
.77% &
Search77& ,
(77, -
Context77- 4
,774 5
command776 =
)77= >
;77> ?
if99 
(99 
!99 
result99 
.99 
	IsSuccess99 %
)99% &
{:: 
await;; 

ReplyAsync;; $
(;;$ %
$";;% '4
(Sorry, I couldn't find a command like **;;' O
{;;O P
command;;P W
};;W X
**.;;X [
";;[ \
);;\ ]
;;;] ^
return<< 
;<< 
}== 
var?? 
cmd?? 
=?? 
result??  
.??  !
Commands??! )
.??) *
First??* /
(??/ 0
)??0 1
.??1 2
Command??2 9
;??9 :
builder@@ 
.@@ 
AddField@@  
(@@  !
x@@! "
=>@@# %
{AA 
xBB 
.BB 
NameBB 
=BB 
$strBB -
;BB- .
xCC 
.CC 
ValueCC 
=CC 
$"CC  
`CC  !
{CC! "
prefixCC" (
}CC( )
{CC) *
(CC* +
cmdCC+ .
.CC. /
AliasesCC/ 6
.CC6 7
CountCC7 <
>CC= >
$numCC? @
?CCA B
$"CCC E
{CCE F
$strCCF I
}CCI J
{CCJ K
stringCCK Q
.CCQ R
JoinCCR V
(CCV W
$strCCW Z
,CCZ [
cmdCC\ _
.CC_ `
AliasesCC` g
)CCg h
}CCh i
{CCi j
$strCCj m
}CCm n
"CCn o
:CCp q
cmdCCr u
.CCu v
NameCCv z
)CCz {
}CC{ |
{CC} ~
string	CC~ Ñ
.
CCÑ Ö
Join
CCÖ â
(
CCâ ä
$str
CCä ç
,
CCç é
cmd
CCè í
.
CCí ì

Parameters
CCì ù
.
CCù û
Select
CCû §
(
CC§ •
p
CC• ¶
=>
CCß ©
p
CC™ ´
.
CC´ ¨

IsOptional
CC¨ ∂
?
CC∑ ∏
$"
CCπ ª
[
CCª º
{
CCº Ω
p
CCΩ æ
.
CCæ ø
Name
CCø √
}
CC√ ƒ
{
CCƒ ≈
(
CC≈ ∆
p
CC∆ «
.
CC« »
IsRemainder
CC» ”
?
CC‘ ’
$str
CC÷ €
:
CC‹ ›
String
CCﬁ ‰
.
CC‰ Â
Empty
CCÂ Í
)
CCÍ Î
}
CCÎ Ï
]
CCÏ Ì
"
CCÌ Ó
:
CCÔ 
$"
CCÒ Û
<
CCÛ Ù
{
CCÙ ı
p
CCı ˆ
.
CCˆ ˜
Name
CC˜ ˚
}
CC˚ ¸
{
CC¸ ˝
(
CC˝ ˛
p
CC˛ ˇ
.
CCˇ Ä
IsRemainder
CCÄ ã
?
CCå ç
$str
CCé ì
:
CCî ï
String
CCñ ú
.
CCú ù
Empty
CCù ¢
)
CC¢ £
}
CC£ §
>
CC§ •
"
CC• ¶
)
CC¶ ß
)
CCß ®
}
CC® ©
`
CC© ™
"
CC™ ´
;
CC´ ¨
xDD 
.DD 
IsInlineDD 
=DD  
trueDD! %
;DD% &
}EE 
)EE 
;EE 
builderFF 
.FF 
AddFieldFF  
(FF  !
(FF! "
xFF" #
)FF# $
=>FF% '
{GG 
xHH 
.HH 
NameHH 
=HH 
$strHH &
;HH& '
xII 
.II 
IsInlineII 
=II  
trueII! %
;II% &
xJJ 
.JJ 
ValueJJ 
=JJ 
cmdJJ !
.JJ! "
SummaryJJ" )
==JJ* ,
nullJJ- 1
?JJ2 3
$strJJ4 B
:JJC D
cmdJJE H
.JJH I
SummaryJJI P
;JJP Q
}KK 
)KK 
;KK 
builderLL 
.LL 
AddFieldLL  
(LL  !
xLL! "
=>LL# %
{LL& '
xMM 
.MM 
NameMM 
=MM 
$strMM =
;MM= >
xNN 
.NN 
ValueNN 
=NN 
stringNN $
.NN$ %
JoinNN% )
(NN) *
$strNN* .
,NN. /
cmdNN/ 2
.NN2 3
PreconditionsNN3 @
.NN@ A
WhereNNA F
(NNF G
vNNG H
=>NNI K
vNNL M
isNNN P)
RequireBotPermissionAttributeNNQ n
)NNn o
.NNo p
SelectNNp v
(NNv w
vNNw x
=>NNy {
(NN| }
(NN} ~*
RequireBotPermissionAttribute	NN~ õ
)
NNõ ú
v
NNú ù
)
NNù û
.
NNû ü
ChannelPermission
NNü ∞
.
NN∞ ±
Value
NN± ∂
)
NN∂ ∑
.
NN∑ ∏
ToArray
NN∏ ø
(
NNø ¿
)
NN¿ ¡
)
NN¡ ¬
;
NN¬ √
}OO 
)OO 
;OO 
builderPP 
.PP 
AddFieldPP  
(PP  !
xPP! "
=>PP# %
{QQ 
xRR 
.RR 
NameRR 
=RR 
$strRR F
;RRF G
xSS 
.SS 
ValueSS 
=SS 
stringSS $
.SS$ %
JoinSS% )
(SS) *
$strSS* .
,SS. /
cmdSS0 3
.SS3 4
PreconditionsSS4 A
.SSA B
WhereSSB G
(SSG H
vSSH I
=>SSJ L
vSSM N
isSSO Q*
RequireUserPermissionAttributeSSR p
)SSp q
.SSq r
SelectSSr x
(SSx y
vSSy z
=>SS{ }
(SS~ 
(	SS Ä,
RequireUserPermissionAttribute
SSÄ û
)
SSû ü
v
SSü †
)
SS† °
.
SS° ¢
ChannelPermission
SS¢ ≥
.
SS≥ ¥
Value
SS¥ π
)
SSπ ∫
.
SS∫ ª
ToArray
SSª ¬
(
SS¬ √
)
SS√ ƒ
)
SSƒ ≈
;
SS≈ ∆
}TT 
)TT 
;TT 
builderUU 
.UU 
AddFieldUU  
(UU  !
xUU! "
=>UU# %
{VV 
xWW 
.WW 
NameWW 
=WW 
$strWW %
;WW% &
xXX 
.XX 
ValueXX 
=XX 
_modulesXX &
.XX& '%
GetAssemblyEntityByModuleXX' @
(XX@ A
cmdXXA D
.XXD E
ModuleXXE K
)XXK L
.XXL M
AssemblyXXM U
.XXU V
GetNameXXV ]
(XX] ^
)XX^ _
.XX_ `
NameXX` d
.XXd e
SanitizAssemblyXXe t
(XXt u
)XXu v
;XXv w
}YY 
)YY 
;YY 
}ZZ 
else[[ 
{\\ 
int]] 
total]] 
=]] 
$num]] 
;]] 
int^^ 
realCommands^^  
=^^! "
$num^^# $
;^^$ %
int__ 
subcommands__ 
=__  !
$num__" #
;__# $
foreach`` 
(`` 
var`` 
module`` #
in``$ &
_service``' /
.``/ 0
Modules``0 7
.``7 8
Where``8 =
(``= >
x``> ?
=>``@ B
!``C D
x``D E
.``E F
IsSubmodule``F Q
&&``R T
x``U V
.``V W
Commands``W _
.``_ `
Count``` e
>``f g
$num``h i
)``i j
)``j k
{aa 
varbb 
descriptionbb #
=bb$ %
newbb& )
StringBuilderbb* 7
(bb7 8
)bb8 9
;bb9 :
varcc 
preconditioncc $
=cc% &
modulecc' -
.cc- .
Preconditionscc. ;
.cc; <
Firstcc< A
(ccA B
xccB C
=>ccD F
xccG H
isccI K
NeedPluginAttributeccL _
)cc_ `
;cc` a
varee 
runee 
=ee 
awaitee #
preconditionee$ 0
.ee0 1!
CheckPermissionsAsyncee1 F
(eeF G
ContexteeG N
,eeN O
moduleeeP V
.eeV W
CommandseeW _
.ee_ `
Firstee` e
(eee f
)eef g
,eeg h
	_providereei r
)eer s
;ees t
ifff 
(ff 
runff 
.ff 
	IsSuccessff %
)ff% &
{gg 
foreachhh 
(hh  !
varhh! $
cmdhh% (
inhh) +
modulehh, 2
.hh2 3
Commandshh3 ;
)hh; <
{ii 
totalll !
++ll! #
;ll# $
descriptionmm '
.mm' (
Appendmm( .
(mm. /
$"mm/ 1
**>** `mm1 8
{mm8 9
prefixmm9 ?
}mm? @
{mm@ A
cmdmmA D
.mmD E
AliasesmmE L
.mmL M
FirstmmM R
(mmR S
)mmS T
}mmT U
`mmU V
"mmV W
)mmW X
;mmX Y
}oo 
}pp 
ifrr 
(rr 
!rr 
stringrr 
.rr  
IsNullOrWhiteSpacerr  2
(rr2 3
descriptionrr3 >
.rr> ?
ToStringrr? G
(rrG H
)rrH I
)rrI J
)rrJ K
{ss 
buildertt 
.tt  
AddFieldtt  (
(tt( )
xtt) *
=>tt+ -
{uu 
xvv 
.vv 
Namevv "
=vv# $
modulevv% +
.vv+ ,
Namevv, 0
;vv0 1
xww 
.ww 
Valueww #
=ww$ %
descriptionww& 1
;ww1 2
xxx 
.xx 
IsInlinexx &
=xx' (
falsexx) .
;xx. /
}yy 
)yy 
;yy 
}zz 
}|| 
realCommands}} 
=}} 
total}} $
-}}% &
subcommands}}' 2
;}}2 3
await~~ 

ReplyAsync~~  
(~~  !
$"~~! #
{~~# $
realCommands~~$ 0
}~~0 1
 real commands, ~~1 A
{~~A B
subcommands~~B M
}~~M N
 sub-commands and ~~N `
{~~` a
total~~a f
}~~f g*
 total commands commands for 	~~g Ñ
{
~~Ñ Ö
this
~~Ö â
.
~~â ä
Context
~~ä ë
.
~~ë í
User
~~í ñ
.
~~ñ ó
Mention
~~ó û
}
~~û ü
"
~~ü †
,
~~† °
false
~~¢ ß
,
~~ß ®
builder
~~© ∞
.
~~∞ ±
Build
~~± ∂
(
~~∂ ∑
)
~~∑ ∏
)
~~∏ π
;
~~π ∫
return 
; 
}
ÄÄ 
await
ÅÅ 

ReplyAsync
ÅÅ 
(
ÅÅ 
$"
ÅÅ %
Available commands for 
ÅÅ 6
{
ÅÅ6 7
this
ÅÅ7 ;
.
ÅÅ; <
Context
ÅÅ< C
.
ÅÅC D
User
ÅÅD H
.
ÅÅH I
Mention
ÅÅI P
}
ÅÅP Q
"
ÅÅQ R
,
ÅÅR S
false
ÅÅT Y
,
ÅÅY Z
builder
ÅÅ[ b
.
ÅÅb c
Build
ÅÅc h
(
ÅÅh i
)
ÅÅi j
)
ÅÅj k
;
ÅÅk l
}
ÇÇ 	
[
ÑÑ 	
Command
ÑÑ	 
(
ÑÑ 
$str
ÑÑ 
)
ÑÑ 
,
ÑÑ 
Alias
ÑÑ 
(
ÑÑ  
new
ÑÑ  #
[
ÑÑ# $
]
ÑÑ$ %
{
ÑÑ& '
$str
ÑÑ( /
,
ÑÑ/ 0
$str
ÑÑ1 :
}
ÑÑ; <
)
ÑÑ< =
,
ÑÑ= >
RequireContext
ÑÑ? M
(
ÑÑM N
ContextType
ÑÑN Y
.
ÑÑY Z
Guild
ÑÑZ _
)
ÑÑ_ `
]
ÑÑ` a
public
ÖÖ 
async
ÖÖ 
Task
ÖÖ 
LeaveServer
ÖÖ %
(
ÖÖ% &
)
ÖÖ& '
{
ÜÜ 	
await
áá 

ReplyAsync
áá 
(
áá 
$"
áá J
<<:exit:606088713532866591> Thanks for using HeroBot during `
áá [
{
áá[ \
(
áá\ ]
DateTime
áá] e
.
ááe f
Now
ááf i
-
ááj k
Context
áál s
.
áás t
Guild
áát y
.
ááy z
CurrentUserááz Ö
.ááÖ Ü
JoinedAtááÜ é
)ááé è
}ááè êT
D` please, remember you can leave a commant in our support server !!!ááê ‘
"áá‘ ’
)áá’ ÷
;áá÷ ◊
await
àà 
Context
àà 
.
àà 
Guild
àà 
.
àà  

LeaveAsync
àà  *
(
àà* +
)
àà+ ,
;
àà, -
}
ââ 	
[
ää 	
Command
ää	 
(
ää 
$str
ää 
)
ää 
,
ää 
Alias
ää "
(
ää" #
new
ää# &
[
ää& '
]
ää' (
{
ää) *
$str
ää+ 4
,
ää4 5
$str
ää6 A
}
ääB C
)
ääC D
]
ääD E
public
ãã 
Task
ãã 
Support
ãã 
(
ãã 
)
ãã 
{
åå 	
return
çç 

ReplyAsync
çç 
(
çç 
$"
çç  c
U<:wave:606089927356317708> Hay ! You can join our superb server ! https://discord.gg/
çç  u
{
ççu v
_config
ççv }
[
çç} ~
$strçç~ á
]ççá à
}ççà â
"ççâ ä
)ççä ã
;ççã å
}
éé 	
[
èè 	
Command
èè	 
(
èè 
$str
èè 
)
èè 
,
èè 
Alias
èè  
(
èè  !
$str
èè! .
)
èè. /
]
èè/ 0
public
êê 
Task
êê 
About
êê 
(
êê 
)
êê 
{
ëë 	
return
íí 

ReplyAsync
íí 
(
íí 
$"
íí  f
X<:wave:606089927356317708> Hi ! I'm HeroBot, your new discord assistant ! My prefix is `
íí  x
{
ííx y
_configííy Ä
[ííÄ Å
$strííÅ â
]ííâ ä
}ííä ã"
` in this server !ííã ù
"ííù û
)ííû ü
;ííü †
}
ìì 	
[
îî 	
Command
îî	 
(
îî 
$str
îî 
)
îî 
,
îî 
Alias
îî 
(
îî 
new
îî "
[
îî" #
]
îî# $
{
îî% &
$str
îî' 0
,
îî0 1
$str
îî2 8
}
îî9 :
)
îî: ;
]
îî; <
public
ïï 
async
ïï 
Task
ïï 
Bot
ïï 
(
ïï 
)
ïï 
{
ññ 	
var
óó 
websocketPing
óó 
=
óó 
DateTime
óó  (
.
óó( )
Now
óó) ,
-
óó- .
Context
óó/ 6
.
óó6 7
Message
óó7 >
.
óó> ?
	CreatedAt
óó? H
;
óóH I
var
òò 
hostPing
òò 
=
òò 
PingHost
òò #
(
òò# $
$str
òò$ 0
)
òò0 1
;
òò1 2
var
ôô 
pingMoyenne
ôô 
=
ôô 
new
ôô !
List
ôô" &
<
ôô& '
long
ôô' +
>
ôô+ ,
(
ôô, -
)
ôô- .
;
ôô. /
RestUserMessage
öö 
message
öö #
=
öö$ %
await
öö& +
Context
öö, 3
.
öö3 4
Channel
öö4 ;
.
öö; <
SendMessageAsync
öö< L
(
ööL M
$str
ööM |
)
öö| }
;
öö} ~
var
õõ 
messages
õõ 
=
õõ 
new
õõ 
[
õõ 
]
õõ  
{
õõ! "
$str
úú 
,
úú 
$str
ùù 
,
ùù 
$str
ûû 
,
ûû 
$str
üü 
}
†† 
;
†† 
for
°° 
(
°° 
int
°° 
i
°° 
=
°° 
$num
°° 
;
°° 
$num
°° 
>=
°°  
i
°°! "
;
°°" #
i
°°$ %
++
°°% '
)
°°' (
{
¢¢ 
var
££ 
watch
££ 
=
££ 
new
££ 
	Stopwatch
££  )
(
££) *
)
££* +
;
££+ ,
watch
§§ 
.
§§ 
Start
§§ 
(
§§ 
)
§§ 
;
§§ 
await
•• 
message
•• 
.
•• 
ModifyAsync
•• )
(
••) *
(
••* +
x
••+ ,
)
••, -
=>
••. 0
{
••1 2
x
••3 4
.
••4 5
Content
••5 <
=
••= >
$"
••? A3
%Ping <:ping:581772617481060363> ! **(
••A f
{
••f g
messages
••g o
[
••o p
i
••p q
]
••q r
}
••r s
)**
••s v
"
••v w
;
••w x
}
••y z
)
••z {
;
••{ |
watch
¶¶ 
.
¶¶ 
Stop
¶¶ 
(
¶¶ 
)
¶¶ 
;
¶¶ 
pingMoyenne
ßß 
.
ßß 
Add
ßß 
(
ßß  
watch
ßß  %
.
ßß% &!
ElapsedMilliseconds
ßß& 9
)
ßß9 :
;
ßß: ;
await
®® 
Task
®® 
.
®® 
Delay
®®  
(
®®  !
$num
®®! $
)
®®$ %
;
®®% &
}
©© 
var
™™ 
restPing
™™ 
=
™™ 
pingMoyenne
™™ &
.
™™& '
Average
™™' .
(
™™. /
)
™™/ 0
;
™™0 1
var
´´ 
memoryCount
´´ 
=
´´ 
$"
´´  
 Heap 
´´  &
{
´´& '

SizeSuffix
´´' 1
(
´´1 2
getAvailableRAM
´´2 A
(
´´A B
)
´´B C
)
´´C D
}
´´D E
"
´´E F
;
´´F G
var
¨¨ 
	processor
¨¨ 
=
¨¨ 
await
¨¨ !#
GetCpuUsageForProcess
¨¨" 7
(
¨¨7 8
)
¨¨8 9
;
¨¨9 :
var
≠≠ 
dotnetVersion
≠≠ 
=
≠≠ 
Environment
≠≠  +
.
≠≠+ ,
Version
≠≠, 3
.
≠≠3 4
ToString
≠≠4 <
(
≠≠< =
)
≠≠= >
;
≠≠> ?
var
ÆÆ 
processorCount
ÆÆ 
=
ÆÆ  
Environment
ÆÆ! ,
.
ÆÆ, -
ProcessorCount
ÆÆ- ;
;
ÆÆ; <
var
ØØ 
threadCount
ØØ 
=
ØØ 
Process
ØØ %
.
ØØ% &
GetCurrentProcess
ØØ& 7
(
ØØ7 8
)
ØØ8 9
.
ØØ9 :
Threads
ØØ: A
;
ØØA B
var
∞∞ 
uptime
∞∞ 
=
∞∞ 
DateTime
∞∞ !
.
∞∞! "
Now
∞∞" %
-
∞∞& '
Process
∞∞( /
.
∞∞/ 0
GetCurrentProcess
∞∞0 A
(
∞∞A B
)
∞∞B C
.
∞∞C D
	StartTime
∞∞D M
;
∞∞M N
var
±± 
embed
±± 
=
±± 
new
±± 
EmbedBuilder
±± (
(
±±( )
)
±±) *
.
≤≤ 
WithRandomColor
≤≤  
(
≤≤  !
)
≤≤! "
.
≥≥ !
WithCopyrightFooter
≥≥ $
(
≥≥$ %
Context
≥≥% ,
.
≥≥, -
User
≥≥- 1
.
≥≥1 2
Username
≥≥2 :
,
≥≥: ;
$str
≥≥< A
)
≥≥A B
.
¥¥ 
WithDescription
¥¥  
(
¥¥  !
$str
¥¥! Q
)
¥¥Q R
.
µµ 
AddField
µµ 
(
µµ 
$str
µµ ,
,
µµ, -
$"
µµ. 0
> 
µµ0 2
{
µµ2 3
Math
µµ3 7
.
µµ7 8
Round
µµ8 =
(
µµ= >
restPing
µµ> F
)
µµF G
}
µµG H
ms
µµH J
"
µµJ K
,
µµK L
true
µµM Q
)
µµQ R
.
∂∂ 
AddField
∂∂ 
(
∂∂ 
$str
∂∂ *
,
∂∂* +
$"
∂∂, .
> 
∂∂. 0
{
∂∂0 1
hostPing
∂∂1 9
}
∂∂9 :
ms
∂∂: <
"
∂∂< =
,
∂∂= >
true
∂∂? C
)
∂∂C D
.
∑∑ 
AddField
∑∑ 
(
∑∑ 
$str
∑∑ *
,
∑∑* +
memoryCount
∑∑, 7
,
∑∑7 8
true
∑∑9 =
)
∑∑= >
.
∏∏ 
AddField
∏∏ 
(
∏∏ 
$str
∏∏ -
,
∏∏- .
$"
∏∏/ 1
> 
∏∏1 3
{
∏∏3 4
Math
∏∏4 8
.
∏∏8 9
Round
∏∏9 >
(
∏∏> ?
websocketPing
∏∏? L
.
∏∏L M
TotalMilliseconds
∏∏M ^
)
∏∏^ _
}
∏∏_ `
 ms
∏∏` c
"
∏∏c d
,
∏∏d e
true
∏∏f j
)
∏∏j k
.
ππ 
AddField
ππ 
(
ππ 
$str
ππ %
,
ππ% &
$"
ππ' )
> 
ππ) +
{
ππ+ ,
	processor
ππ, 5
}
ππ5 6
%
ππ6 7
"
ππ7 8
,
ππ8 9
true
ππ: >
)
ππ> ?
.
∫∫ 
AddField
∫∫ 
(
∫∫ 
$str
∫∫ (
,
∫∫( )
$str
∫∫* .
+
∫∫/ 0
dotnetVersion
∫∫1 >
,
∫∫> ?
true
∫∫@ D
)
∫∫D E
.
ªª 
AddField
ªª 
(
ªª 
$str
ªª (
,
ªª( )
$"
ªª* ,
> 
ªª, .
{
ªª. /
processorCount
ªª/ =
}
ªª= >
c
ªª> ?
"
ªª? @
,
ªª@ A
true
ªªB F
)
ªªF G
.
ºº 
AddField
ºº 
(
ºº 
$str
ºº *
,
ºº* +
$str
ºº, 0
+
ºº1 2
threadCount
ºº3 >
.
ºº> ?
Count
ºº? D
,
ººD E
true
ººF J
)
ººJ K
.
ΩΩ 
AddField
ΩΩ 
(
ΩΩ 
$str
ΩΩ "
,
ΩΩ" #
$str
ΩΩ$ (
+
ΩΩ) *
uptime
ΩΩ+ 1
.
ΩΩ1 2
ToHumanReadable
ΩΩ2 A
(
ΩΩA B
)
ΩΩB C
)
ΩΩC D
.
ææ 
AddField
ææ 
(
ææ 
$str
ææ '
,
ææ' (
$str
ææ) p
)
ææp q
;
ææq r
await
øø 
message
øø 
.
øø 
ModifyAsync
øø %
(
øø% &
(
øø& '
x
øø' (
)
øø( )
=>
øø* ,
{
¿¿ 
x
¡¡ 
.
¡¡ 
Embed
¡¡ 
=
¡¡ 
embed
¡¡ 
.
¡¡  
Build
¡¡  %
(
¡¡% &
)
¡¡& '
;
¡¡' (
x
¬¬ 
.
¬¬ 
Content
¬¬ 
=
¬¬ 
String
¬¬ "
.
¬¬" #
Empty
¬¬# (
;
¬¬( )
}
√√ 
)
√√ 
;
√√ 
}
ƒƒ 	
public
≈≈ 
long
≈≈ 
getAvailableRAM
≈≈ #
(
≈≈# $
)
≈≈$ %
{
∆∆ 	
return
«« 
Process
«« 
.
«« 
GetCurrentProcess
«« ,
(
««, -
)
««- .
.
««. /!
PrivateMemorySize64
««/ B
;
««B C
}
»» 	
private
…… 
async
…… 
Task
…… 
<
…… 
double
…… !
>
……! "#
GetCpuUsageForProcess
……# 8
(
……8 9
)
……9 :
{
   	
var
ÀÀ 
	startTime
ÀÀ 
=
ÀÀ 
DateTime
ÀÀ $
.
ÀÀ$ %
UtcNow
ÀÀ% +
;
ÀÀ+ ,
var
ÃÃ 
startCpuUsage
ÃÃ 
=
ÃÃ 
Process
ÃÃ  '
.
ÃÃ' (
GetCurrentProcess
ÃÃ( 9
(
ÃÃ9 :
)
ÃÃ: ;
.
ÃÃ; < 
TotalProcessorTime
ÃÃ< N
;
ÃÃN O
await
ÕÕ 
Task
ÕÕ 
.
ÕÕ 
Delay
ÕÕ 
(
ÕÕ 
$num
ÕÕ  
)
ÕÕ  !
;
ÕÕ! "
var
œœ 
endTime
œœ 
=
œœ 
DateTime
œœ "
.
œœ" #
UtcNow
œœ# )
;
œœ) *
var
–– 
endCpuUsage
–– 
=
–– 
Process
–– %
.
––% &
GetCurrentProcess
––& 7
(
––7 8
)
––8 9
.
––9 : 
TotalProcessorTime
––: L
;
––L M
var
—— 
	cpuUsedMs
—— 
=
—— 
(
—— 
endCpuUsage
—— (
-
——) *
startCpuUsage
——+ 8
)
——8 9
.
——9 :
TotalMilliseconds
——: K
;
——K L
var
““ 
totalMsPassed
““ 
=
““ 
(
““  !
endTime
““! (
-
““) *
	startTime
““+ 4
)
““4 5
.
““5 6
TotalMilliseconds
““6 G
;
““G H
var
”” 
cpuUsageTotal
”” 
=
”” 
	cpuUsedMs
””  )
/
””* +
(
””, -
Environment
””- 8
.
””8 9
ProcessorCount
””9 G
*
””H I
totalMsPassed
””J W
)
””W X
;
””X Y
return
‘‘ 
Math
‘‘ 
.
‘‘ 
Round
‘‘ 
(
‘‘ 
cpuUsageTotal
‘‘ +
*
‘‘, -
$num
‘‘. 3
)
‘‘3 4
/
‘‘5 6
$num
‘‘7 :
;
‘‘: ;
}
’’ 	
internal
⁄⁄ 
static
⁄⁄ 
readonly
⁄⁄  
string
⁄⁄! '
[
⁄⁄' (
]
⁄⁄( )
SizeSuffixes
⁄⁄* 6
=
⁄⁄7 8
{
⁄⁄9 :
$str
⁄⁄; B
,
⁄⁄B C
$str
⁄⁄D H
,
⁄⁄H I
$str
⁄⁄J N
,
⁄⁄N O
$str
⁄⁄P T
,
⁄⁄T U
$str
⁄⁄V Z
,
⁄⁄Z [
$str
⁄⁄\ `
,
⁄⁄` a
$str
⁄⁄b f
,
⁄⁄f g
$str
⁄⁄h l
,
⁄⁄l m
$str
⁄⁄n r
}
⁄⁄s t
;
⁄⁄t u
internal
·· 
static
·· 
string
·· 

SizeSuffix
·· )
(
··) *
Int64
··* /
value
··0 5
)
··5 6
{
‚‚ 	
if
„„ 
(
„„ 
value
„„ 
<
„„ 
$num
„„ 
)
„„ 
{
„„ 
return
„„ #
$str
„„$ '
+
„„( )

SizeSuffix
„„* 4
(
„„4 5
-
„„5 6
value
„„6 ;
)
„„; <
;
„„< =
}
„„> ?
if
‰‰ 
(
‰‰ 
value
‰‰ 
==
‰‰ 
$num
‰‰ 
)
‰‰ 
{
‰‰ 
return
‰‰ $
$str
‰‰% 0
;
‰‰0 1
}
‰‰2 3
int
ÊÊ 
mag
ÊÊ 
=
ÊÊ 
(
ÊÊ 
int
ÊÊ 
)
ÊÊ 
Math
ÊÊ 
.
ÊÊ  
Log
ÊÊ  #
(
ÊÊ# $
value
ÊÊ$ )
,
ÊÊ) *
$num
ÊÊ+ /
)
ÊÊ/ 0
;
ÊÊ0 1
decimal
ÁÁ 
adjustedSize
ÁÁ  
=
ÁÁ! "
(
ÁÁ# $
decimal
ÁÁ$ +
)
ÁÁ+ ,
value
ÁÁ, 1
/
ÁÁ2 3
(
ÁÁ4 5
$num
ÁÁ5 7
<<
ÁÁ8 :
(
ÁÁ; <
mag
ÁÁ< ?
*
ÁÁ@ A
$num
ÁÁB D
)
ÁÁD E
)
ÁÁE F
;
ÁÁF G
return
ÈÈ 
string
ÈÈ 
.
ÈÈ 
Format
ÈÈ  
(
ÈÈ  !
$str
ÈÈ! -
,
ÈÈ- .
adjustedSize
ÈÈ/ ;
,
ÈÈ; <
SizeSuffixes
ÈÈ= I
[
ÈÈI J
mag
ÈÈJ M
]
ÈÈM N
)
ÈÈN O
;
ÈÈO P
}
ÍÍ 	
public
ÎÎ 
static
ÎÎ 
long
ÎÎ 
PingHost
ÎÎ #
(
ÎÎ# $
string
ÎÎ$ *
nameOrAddress
ÎÎ+ 8
)
ÎÎ8 9
{
ÏÏ 	
var
ÌÌ 
timer
ÌÌ 
=
ÌÌ 
new
ÌÌ 
	Stopwatch
ÌÌ %
(
ÌÌ% &
)
ÌÌ& '
;
ÌÌ' (
Ping
ÓÓ 
pinger
ÓÓ 
=
ÓÓ 
null
ÓÓ 
;
ÓÓ 
try
ÔÔ 
{
 
timer
ÒÒ 
.
ÒÒ 
Start
ÒÒ 
(
ÒÒ 
)
ÒÒ 
;
ÒÒ 
new
ÚÚ 
Ping
ÚÚ 
(
ÚÚ 
)
ÚÚ 
.
ÚÚ 
Send
ÚÚ 
(
ÚÚ  
nameOrAddress
ÚÚ  -
)
ÚÚ- .
;
ÚÚ. /
}
ÛÛ 
catch
ÙÙ 
(
ÙÙ 
PingException
ÙÙ  
)
ÙÙ  !
{
ıı 
}
˜˜ 
finally
¯¯ 
{
˘˘ 
if
˙˙ 
(
˙˙ 
pinger
˙˙ 
!=
˙˙ 
null
˙˙ "
)
˙˙" #
{
˚˚ 
pinger
¸¸ 
.
¸¸ 
Dispose
¸¸ "
(
¸¸" #
)
¸¸# $
;
¸¸$ %
}
˝˝ 
}
˛˛ 
timer
ˇˇ 
.
ˇˇ 
Stop
ˇˇ 
(
ˇˇ 
)
ˇˇ 
;
ˇˇ 
return
ÄÄ 
timer
ÄÄ 
.
ÄÄ !
ElapsedMilliseconds
ÄÄ ,
;
ÄÄ, -
}
ÅÅ 	
[
ÑÑ 	
Group
ÑÑ	 
(
ÑÑ 
$str
ÑÑ 
)
ÑÑ 
]
ÑÑ 
[
ÖÖ 	
Cooldown
ÖÖ	 
(
ÖÖ 
$num
ÖÖ 
)
ÖÖ 
]
ÖÖ 
public
ÜÜ 
class
ÜÜ 
PluginCommands
ÜÜ #
:
ÜÜ$ %

ModuleBase
ÜÜ& 0
<
ÜÜ0 1"
SocketCommandContext
ÜÜ1 E
>
ÜÜE F
{
áá 	
private
àà 
readonly
àà 
CommandService
àà +
	_commands
àà, 5
;
àà5 6
private
ââ 
readonly
ââ 
IModulesService
ââ ,
_modules
ââ- 5
;
ââ5 6
public
ää 
PluginCommands
ää !
(
ää! "
CommandService
ää" 0
commandService
ää1 ?
,
ää? @
IModulesService
ääA P
modulesService
ääQ _
)
ää_ `
{
ãã 
	_commands
åå 
=
åå 
commandService
åå *
;
åå* +
_modules
çç 
=
çç 
modulesService
çç )
;
çç) *
}
éé 
[
êê 
Command
êê 
(
êê 
$str
êê 
)
êê 
]
êê 
public
ëë 
async
ëë 
Task
ëë 
ListPlugins
ëë )
(
ëë) *
)
ëë* +
{
íí 
var
ìì 
resp
ìì 
=
ìì 
new
ìì 
StringBuilder
ìì ,
(
ìì, -
$str
ìì- R
)
ììR S
;
ììS T
foreach
îî 
(
îî 
var
îî 
module
îî #
in
îî$ &
	_commands
îî' 0
.
îî0 1
Modules
îî1 8
)
îî8 9
{
ïï 
if
ññ 
(
ññ 
!
ññ 
module
ññ 
.
ññ  
IsSubmodule
ññ  +
)
ññ+ ,
{
óó 
var
òò 
	isEnabled
òò %
=
òò& '
await
òò( -
_modules
òò. 6
.
òò6 7
IsPluginEnabled
òò7 F
(
òòF G
Context
òòG N
.
òòN O
Guild
òòO T
,
òòT U
module
òòV \
)
òò\ ]
;
òò] ^
resp
ôô 
.
ôô 
Append
ôô #
(
ôô# $
$"
ôô$ &
**
ôô& (
{
ôô( )
(
ôô) *
	isEnabled
ôô* 3
?
ôô4 5
$str
ôô6 <
:
ôô= >
$str
ôô? E
)
ôôE F
}
ôôF G
 ‚Ä¢ 
ôôG J
{
ôôJ K
(
ôôK L
	isEnabled
ôôL U
?
ôôV W
$str
ôôX a
:
ôôb c
$str
ôôd n
)
ôôn o
}
ôôo p
** ‚Ä¢ 
ôôp u
{
ôôu v
_modules
ôôv ~
.
ôô~ (
GetAssemblyEntityByModuleôô ò
(ôôò ô
moduleôôô ü
)ôôü †
.ôô† °
Assemblyôô° ©
.ôô© ™
GetNameôô™ ±
(ôô± ≤
)ôô≤ ≥
.ôô≥ ¥
Nameôô¥ ∏
.ôô∏ π
SanitizAssemblyôôπ »
(ôô» …
)ôô…  
}ôô  À
 \nôôÀ Œ
"ôôŒ œ
)ôôœ –
;ôô– —
}
öö 
}
õõ 
await
úú 

ReplyAsync
úú  
(
úú  !
resp
úú! %
.
úú% &
ToString
úú& .
(
úú. /
)
úú/ 0
)
úú0 1
;
úú1 2
}
ùù 
[
ûû 
Command
ûû 
(
ûû 
$str
ûû 
)
ûû 
]
ûû 
[
üü 
RequireContext
üü 
(
üü 
ContextType
üü '
.
üü' (
Guild
üü( -
)
üü- .
]
üü. /
public
†† 
async
†† 
Task
†† 
EnablePlugin
†† *
(
††* +
[
††+ ,
	Remainder
††, 5
]
††5 6
string
††6 <
plugin
††= C
)
††C D
{
°° 
if
¢¢ 
(
¢¢ 
	_commands
¢¢ 
.
¢¢ 
Modules
¢¢ %
.
¢¢% &
Any
¢¢& )
(
¢¢) *
x
¢¢* +
=>
¢¢, .
plugin
¢¢/ 5
==
¢¢6 8
_modules
¢¢9 A
.
¢¢A B'
GetAssemblyEntityByModule
¢¢B [
(
¢¢[ \
x
¢¢\ ]
)
¢¢] ^
.
¢¢^ _
Assembly
¢¢_ g
.
¢¢g h
GetName
¢¢h o
(
¢¢o p
)
¢¢p q
.
¢¢q r
Name
¢¢r v
.
¢¢v w
SanitizAssembly¢¢w Ü
(¢¢Ü á
)¢¢á à
)¢¢à â
)¢¢â ä
{
££ 
await
§§ 
_modules
§§ "
.
§§" #
EnablePlugin
§§# /
(
§§/ 0
Context
§§0 7
.
§§7 8
Guild
§§8 =
,
§§= >
	_commands
§§> G
.
§§G H
Modules
§§H O
.
§§O P
First
§§P U
(
§§U V
x
§§V W
=>
§§X Z
plugin
§§[ a
==
§§b d
_modules
§§e m
.
§§m n(
GetAssemblyEntityByModule§§n á
(§§á à
x§§à â
)§§â ä
.§§ä ã
Assembly§§ã ì
.§§ì î
GetName§§î õ
(§§õ ú
)§§ú ù
.§§ù û
Name§§û ¢
.§§¢ £
SanitizAssembly§§£ ≤
(§§≤ ≥
)§§≥ ¥
)§§¥ µ
)§§µ ∂
;§§∂ ∑
await
•• 

ReplyAsync
•• $
(
••$ %
$str
••% ]
)
••] ^
;
••^ _
}
¶¶ 
else
ßß 
{
®® 
await
©© 

ReplyAsync
©© $
(
©©$ %
$"
©©% '+
I can't find a plugin named `
©©' D
{
©©D E
plugin
©©E K
}
©©K L
`
©©L M
"
©©M N
)
©©N O
;
©©O P
}
™™ 
}
´´ 
[
¨¨ 
Command
¨¨ 
(
¨¨ 
$str
¨¨ 
)
¨¨ 
]
¨¨  
[
≠≠ 
RequireContext
≠≠ 
(
≠≠ 
ContextType
≠≠ '
.
≠≠' (
Guild
≠≠( -
)
≠≠- .
]
≠≠. /
public
ÆÆ 
async
ÆÆ 
Task
ÆÆ 
DisablePlugin
ÆÆ +
(
ÆÆ+ ,
[
ÆÆ, -
	Remainder
ÆÆ- 6
]
ÆÆ6 7
string
ÆÆ7 =
plugin
ÆÆ> D
)
ÆÆD E
{
ØØ 
if
∞∞ 
(
∞∞ 
	_commands
∞∞ 
.
∞∞ 
Modules
∞∞ %
.
∞∞% &
Any
∞∞& )
(
∞∞) *
x
∞∞* +
=>
∞∞, .
plugin
∞∞/ 5
==
∞∞6 8
_modules
∞∞9 A
.
∞∞A B'
GetAssemblyEntityByModule
∞∞B [
(
∞∞[ \
x
∞∞\ ]
)
∞∞] ^
.
∞∞^ _
Assembly
∞∞_ g
.
∞∞g h
GetName
∞∞h o
(
∞∞o p
)
∞∞p q
.
∞∞q r
Name
∞∞r v
.
∞∞v w
SanitizAssembly∞∞w Ü
(∞∞Ü á
)∞∞á à
)∞∞à â
)∞∞â ä
{
±± 
await
≤≤ 
_modules
≤≤ "
.
≤≤" #
DisablePlugin
≤≤# 0
(
≤≤0 1
Context
≤≤1 8
.
≤≤8 9
Guild
≤≤9 >
,
≤≤> ?
	_commands
≤≤@ I
.
≤≤I J
Modules
≤≤J Q
.
≤≤Q R
First
≤≤R W
(
≤≤W X
x
≤≤X Y
=>
≤≤Z \
plugin
≤≤] c
==
≤≤d f
_modules
≤≤g o
.
≤≤o p(
GetAssemblyEntityByModule≤≤p â
(≤≤â ä
x≤≤ä ã
)≤≤ã å
.≤≤å ç
Assembly≤≤ç ï
.≤≤ï ñ
GetName≤≤ñ ù
(≤≤ù û
)≤≤û ü
.≤≤ü †
Name≤≤† §
.≤≤§ •
SanitizAssembly≤≤• ¥
(≤≤¥ µ
)≤≤µ ∂
)≤≤∂ ∑
)≤≤∑ ∏
;≤≤∏ π
await
≥≥ 

ReplyAsync
≥≥ $
(
≥≥$ %
$str
≥≥% ^
)
≥≥^ _
;
≥≥_ `
}
¥¥ 
else
µµ 
{
∂∂ 
await
∑∑ 

ReplyAsync
∑∑ $
(
∑∑$ %
$"
∑∑% '+
I can't find a plugin named `
∑∑' D
{
∑∑D E
plugin
∑∑E K
}
∑∑K L
`
∑∑L M
"
∑∑M N
)
∑∑N O
;
∑∑O P
}
∏∏ 
}
ππ 
[
∫∫ 
Command
∫∫ 
(
∫∫ 
$str
∫∫ %
)
∫∫% &
]
∫∫& '
public
ªª 
async
ªª 
Task
ªª 
DisableCommand
ªª ,
(
ªª, -
[
ªª- .
	Remainder
ªª. 7
]
ªª7 8
string
ªª8 >
command
ªª? F
)
ªªF G
{
ºº 
}
ΩΩ 
[
ææ 
Command
ææ 
(
ææ 
$str
ææ $
)
ææ$ %
]
ææ% &
public
øø 
async
øø 
Task
øø 
EnableCommand
øø +
(
øø+ ,
string
øø, 2
command
øø3 :
)
øø: ;
{
¿¿ 
}
¡¡ 
}
¬¬ 	
}
√√ 
}ƒƒ ¸
aC:\Users\Matthieu\source\repos\HeroBot-deux-point-z√©ro\HeroBot.Plugins.HeroBot\PluginRefferal.cs
	namespace 	
HeroBot
 
. 
Plugins 
. 
HeroBot !
{ 
public 

class 
PluginRefferal 
:  !
IPluginRefferal" 1
{		 
}

 
} 