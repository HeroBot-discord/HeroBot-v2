¯Ÿ
fC:\Users\Matthieu\source\repos\HeroBot-deux-point-z√©ro\HeroBot.Plugins.Images\Modules\ImagesModule.cs
	namespace 	
HeroBot
 
. 
Plugins 
. 
Images  
.  !
Modules! (
{ 
[ 
Cooldown 
( 
$num 
) 
] 
[ 

NeedPlugin 
( 
) 
] 
[ 
Name 	
(	 

$str
 %
)% &
]& '
public 

class 
ImagesModule 
: 

ModuleBase  *
<* + 
SocketCommandContext+ ?
>? @
{ 
private 
readonly 
Random 
_random  '
;' (
private 
readonly 
static 
string  &
[& '
]' (
CatGreet) 1
=2 3
new4 7
[7 8
]8 9
{: ;
$str< C
,C D
$strE L
,L M
$strN Y
,Y Z
$str[ b
,b c
$strd k
,k l
$strm {
}| }
;} ~
private 
readonly 
static 
string  &
[& '
]' (
CatGreetings) 5
=6 7
new8 ;
[; <
]< =
{> ?
$str@ g
,g h
$str	i Ñ
,
Ñ Ö
$str
Ü ∞
}
± ≤
;
≤ ≥
private 
readonly 
static 
string  &
[& '
]' (
DogGreet) 1
=2 3
new4 7
[7 8
]8 9
{: ;
$str< C
,C D
$strE L
,L M
$strN Y
,Y Z
$str[ b
,b c
$strd k
,k l
$strm {
,{ |
$str	} Ñ
}
Ö Ü
;
Ü á
private 
readonly 
static 
string  &
[& '
]' (
DogGreetings) 5
=6 7
new8 ;
[; <
]< =
{> ?
$str@ g
,g h
$str	i Ñ
,
Ñ Ö
$str
Ü ∞
}
± ≤
;
≤ ≥
private 
readonly 
static 
string  &
CatUrl' -
=. /
$str0 L
;L M
private 
readonly 
static 
string  &
DogUrl' -
=. /
$str0 I
;I J
private 
readonly 
static 
string  &
EclyssiaUrl' 2
=3 4
$str5 U
;U V
public 
ImagesModule 
( 
Random "
random# )
)) *
{ 	
_random 
= 
random 
; 
}   	
["" 	
Command""	 
("" 
$str"" 
)"" 
,"" 
Alias"" 
("" 
$str"" %
)""% &
]""& '
public## 
Task## 
	RandomCat## 
(## 
)## 
{$$ 	
using%% 
	WebClient%% 
	webclient%% %
=%%& '
new%%( +
	WebClient%%, 5
(%%5 6
)%%6 7
;%%7 8
return&& 
	webclient&& 
.&& #
DownloadStringTaskAsync&& 4
(&&4 5
new&&5 8
Uri&&9 <
(&&< =
CatUrl&&= C
)&&C D
)&&D E
.&&E F
ContinueWith&&F R
(&&R S
async&&S X
(&&Y Z
x&&Z [
)&&[ \
=>&&] _
{'' 
var(( 
url(( 
=(( 
JsonConvert(( %
.((% &
DeserializeObject((& 7
<((7 8
dynamic((8 ?
>((? @
(((@ A
x((A B
.((B C
Result((C I
)((I J
.((J K
file((K O
;((O P
await)) 

ReplyAsync))  
())  !
$"))! #
:cat:  ))# *
{))* +
Context))+ 2
.))2 3
User))3 7
.))7 8
Mention))8 ?
}))? @
{))A B
CatGreetings))B N
[))N O
_random))O V
.))V W
Next))W [
())[ \
)))\ ]
%))^ _
CatGreetings))` l
.))l m
Length))m s
]))s t
.))t u
Replace))u |
())| }
$str	))} à
,
))à â
CatGreet
))ä í
[
))í ì
_random
))ì ö
.
))ö õ
Next
))õ ü
(
))ü †
)
))† °
%
))¢ £
CatGreet
))§ ¨
.
))¨ ≠
Length
))≠ ≥
]
))≥ ¥
)
))¥ µ
}
))µ ∂
"
))∂ ∑
,
))∑ ∏
false
))π æ
,
))æ ø
new
))¿ √
EmbedBuilder
))ƒ –
(
))– —
)
))— “
{** 
ImageUrl++ 
=++ 
url++ "
},, 
.,, 
WithRandomColor,, !
(,,! "
),," #
.,,# $
WithCopyrightFooter,,$ 7
(,,7 8
Context,,8 ?
.,,? @
User,,@ D
.,,D E
Username,,E M
,,,M N
$str,,O T
),,T U
.,,U V
Build,,V [
(,,[ \
),,\ ]
),,] ^
;,,^ _
	webclient-- 
.-- 
Dispose-- !
(--! "
)--" #
;--# $
}.. 
).. 
;.. 
}// 	
[11 	
Command11	 
(11 
$str11 
)11 
,11 
Alias11 
(11 
new11 "
[11" #
]11# $
{11% &
$str11' -
,11- .
$str11/ 5
}116 7
)117 8
]118 9
public22 
Task22 
	RandomDog22 
(22 
)22 
{33 	
using44 
	WebClient44 
	webclient44 %
=44& '
new44( +
	WebClient44, 5
(445 6
)446 7
;447 8
return55 
	webclient55 
.55 #
DownloadStringTaskAsync55 4
(554 5
new555 8
Uri559 <
(55< =
DogUrl55= C
)55C D
)55D E
.55E F
ContinueWith55F R
(55R S
async55S X
(55Y Z
x55Z [
)55[ \
=>55] _
{66 
await77 	

ReplyAsync77
 
(77 
$"77 
:dog: 77 
{77 
Context77 %
.77% &
User77& *
.77* +
Mention77+ 2
}772 3
{774 5
DogGreetings775 A
[77A B
_random77B I
.77I J
Next77J N
(77N O
)77O P
%77Q R
DogGreetings77S _
.77_ `
Length77` f
]77f g
.77g h
Replace77h o
(77o p
$str77p {
,77{ |
DogGreet	77} Ö
[
77Ö Ü
_random
77Ü ç
.
77ç é
Next
77é í
(
77í ì
)
77ì î
%
77ï ñ
DogGreet
77ó ü
.
77ü †
Length
77† ¶
]
77¶ ß
)
77ß ®
}
77® ©
"
77© ™
,
77™ ´
false
77¨ ±
,
77± ≤
new
77≥ ∂
EmbedBuilder
77∑ √
(
77√ ƒ
)
77ƒ ≈
{88 
ImageUrl99 
=99 
$"99 
https://random.dog/99 (
{99( )
x99) *
.99* +
Result99+ 1
}991 2
"992 3
}:: 
.:: 
WithRandomColor:: 
(:: 
):: 
.:: 
WithCopyrightFooter:: +
(::+ ,
Context::, 3
.::3 4
User::4 8
.::8 9
Username::9 A
,::A B
$str::C H
)::H I
.::I J
Build::J O
(::O P
)::P Q
)::Q R
;::R S
	webclient;; 
.;; 
Dispose;; 
(;; 
);; 
;;; 
}<< 
)<< 
;<< 
}== 	
[?? 	
Command??	 
(?? 
$str?? 
)?? 
]?? 
public@@ 
async@@ 
Task@@ 
Pixelate@@ "
(@@" #
string@@# )
url@@* -
=@@. /
null@@0 4
)@@4 5
{AA 	
varBB 
rurlBB 
=BB 

ResolveUrlBB !
(BB! "
urlBB" %
)BB% &
;BB& '
usingCC 

HttpClientCC 
clientCC #
=CC$ %
newCC& )

HttpClientCC* 4
(CC4 5
)CC5 6
;CC6 7
varDD 
	bytearrayDD 
=DD 
awaitDD !
clientDD" (
.DD( )
GetByteArrayAsyncDD) :
(DD: ;
$"DD; =
{DD= >
EclyssiaUrlDD> I
}DDI J
/pixelate?url=DDJ X
{DDX Y
rurlDDY ]
}DD] ^
"DD^ _
)DD_ `
;DD` a
varEE 
streamEE 
=EE 
newEE 
MemoryStreamEE )
(EE) *
	bytearrayEE* 3
)EE3 4
;EE4 5
tryFF 
{GG 
awaitHH 
ContextHH 
.HH 
ChannelHH %
.HH% &
SendFileAsyncHH& 3
(HH3 4
streamHH4 :
,HH: ;
$strHH< J
,HHJ K
embedHHL Q
:HHQ R
newHHS V
EmbedBuilderHHW c
(HHc d
)HHd e
.II 
WithRandomColorII  
(II  !
)II! "
.JJ 

WithAuthorJJ 
(JJ 
ContextJJ #
.JJ# $
UserJJ$ (
)JJ( )
.KK 
WithImageUrlKK 
(KK 
$strKK 9
)KK9 :
.KK: ;
BuildKK; @
(KK@ A
)KKA B
)KKB C
;KKC D
}LL 
catchMM 
(MM 
	ExceptionMM 
)MM 
{MM 
}MM@ A
finallyNN 
{NN 
streamPP 
.PP 
ClosePP 
(PP 
)PP 
;PP 
}QQ 
}RR 	
[SS 	
CommandSS	 
(SS 
$strSS 
)SS 
]SS 
publicTT 
asyncTT 
TaskTT 
SepiaTT 
(TT  
stringTT  &
urlTT' *
=TT+ ,
nullTT- 1
)TT1 2
{UU 	
varVV 
rurlVV 
=VV 

ResolveUrlVV !
(VV! "
urlVV" %
)VV% &
;VV& '
usingWW 

HttpClientWW 
clientWW #
=WW$ %
newWW& )

HttpClientWW* 4
(WW4 5
)WW5 6
;WW6 7
varXX 
	bytearrayXX 
=XX 
awaitXX !
clientXX" (
.XX( )
GetByteArrayAsyncXX) :
(XX: ;
$"XX; =
{XX= >
EclyssiaUrlXX> I
}XXI J
/sepia?url=XXJ U
{XXU V
rurlXXV Z
}XXZ [
"XX[ \
)XX\ ]
;XX] ^
varYY 
streamYY 
=YY 
newYY 
MemoryStreamYY )
(YY) *
	bytearrayYY* 3
)YY3 4
;YY4 5
tryZZ 
{[[ 
await\\ 
Context\\ 
.\\ 
Channel\\ %
.\\% &
SendFileAsync\\& 3
(\\3 4
stream\\4 :
,\\: ;
$str\\< G
,\\G H
embed\\I N
:\\N O
new\\P S
EmbedBuilder\\T `
(\\` a
)\\a b
.]] 
WithRandomColor]]  
(]]  !
)]]! "
.^^ 

WithAuthor^^ 
(^^ 
Context^^ #
.^^# $
User^^$ (
)^^( )
.__ 
WithImageUrl__ 
(__ 
$str__ 6
)__6 7
.__7 8
Build__8 =
(__= >
)__> ?
)__? @
;__@ A
}`` 
catchaa 
(aa 
	Exceptionaa 
)aa 
{aa 
}aa@ A
finallybb 
{cc 
streamee 
.ee 
Closeee 
(ee 
)ee 
;ee 
}ff 
clientgg 
.gg 
Disposegg 
(gg 
)gg 
;gg 
}hh 	
[jj 	
Commandjj	 
(jj 
$strjj 
)jj 
]jj 
publickk 
asynckk 
Taskkk 
Mirrorkk  
(kk  !
stringkk! '
urlkk( +
=kk, -
nullkk. 2
)kk2 3
{ll 	
varmm 
rurlmm 
=mm 

ResolveUrlmm !
(mm! "
urlmm" %
)mm% &
;mm& '
usingnn 

HttpClientnn 
clientnn #
=nn$ %
newnn& )

HttpClientnn* 4
(nn4 5
)nn5 6
;nn6 7
varoo 
	bytearrayoo 
=oo 
awaitoo !
clientoo" (
.oo( )
GetByteArrayAsyncoo) :
(oo: ;
$"oo; =
{oo= >
EclyssiaUrloo> I
}ooI J
/sepia?url=ooJ U
{ooU V
rurlooV Z
}ooZ [
"oo[ \
)oo\ ]
;oo] ^
varpp 
streampp 
=pp 
newpp 
MemoryStreampp )
(pp) *
	bytearraypp* 3
)pp3 4
;pp4 5
tryqq 
{rr 
awaitss 
Contextss 
.ss 
Channelss %
.ss% &
SendFileAsyncss& 3
(ss3 4
streamss4 :
,ss: ;
$strss< G
,ssG H
embedssI N
:ssN O
newssP S
EmbedBuilderssT `
(ss` a
)ssa b
.tt 
WithRandomColortt  
(tt  !
)tt! "
.uu 

WithAuthoruu 
(uu 
Contextuu #
.uu# $
Useruu$ (
)uu( )
.vv 
WithImageUrlvv 
(vv 
$strvv 6
)vv6 7
.vv7 8
Buildvv8 =
(vv= >
)vv> ?
)vv? @
;vv@ A
}ww 
catchxx 
(xx 
	Exceptionxx 
)xx 
{xx 
}xx@ A
finallyyy 
{zz 
stream|| 
.|| 
Close|| 
(|| 
)|| 
;|| 
}}} 
client~~ 
.~~ 
Dispose~~ 
(~~ 
)~~ 
;~~ 
} 	
[
ÅÅ 	
Command
ÅÅ	 
(
ÅÅ 
$str
ÅÅ 
)
ÅÅ 
]
ÅÅ 
public
ÇÇ 
async
ÇÇ 
Task
ÇÇ 
Invert
ÇÇ  
(
ÇÇ  !
string
ÇÇ! '
url
ÇÇ( +
=
ÇÇ, -
null
ÇÇ. 2
)
ÇÇ2 3
{
ÉÉ 	
var
ÑÑ 
rurl
ÑÑ 
=
ÑÑ 

ResolveUrl
ÑÑ !
(
ÑÑ! "
url
ÑÑ" %
)
ÑÑ% &
;
ÑÑ& '
using
ÖÖ 

HttpClient
ÖÖ 
client
ÖÖ #
=
ÖÖ$ %
new
ÖÖ& )

HttpClient
ÖÖ* 4
(
ÖÖ4 5
)
ÖÖ5 6
;
ÖÖ6 7
Console
ÜÜ 
.
ÜÜ 
	WriteLine
ÜÜ 
(
ÜÜ 
rurl
ÜÜ "
)
ÜÜ" #
;
ÜÜ# $
var
áá 
	bytearray
áá 
=
áá 
await
áá !
client
áá" (
.
áá( )
GetByteArrayAsync
áá) :
(
áá: ;
$"
áá; =3
%http://imageapi:3000/invert?imageurl=
áá= b
{
ááb c
rurl
áác g
}
áág h
"
ááh i
)
áái j
;
ááj k
var
àà 
stream
àà 
=
àà 
new
àà 
MemoryStream
àà )
(
àà) *
	bytearray
àà* 3
)
àà3 4
;
àà4 5
await
ââ 
Context
ââ 
.
ââ 
Channel
ââ !
.
ââ! "
SendFileAsync
ââ" /
(
ââ/ 0
stream
ââ0 6
,
ââ6 7
$str
ââ8 D
,
ââD E
embed
ââF K
:
ââK L
new
ââM P
EmbedBuilder
ââQ ]
(
ââ] ^
)
ââ^ _
.
ââ_ `
WithImageUrl
ââ` l
(
ââl m
$strââm Ü
)ââÜ á
.ââá à#
WithCopyrightFooterââà õ
(ââõ ú
)ââú ù
.
ää 
WithRandomColor
ää  
(
ää  !
)
ää! "
.
ãã 

WithAuthor
ãã 
(
ãã 
Context
ãã #
.
ãã# $
User
ãã$ (
)
ãã( )
.
ãã) *
Build
ãã* /
(
ãã/ 0
)
ãã0 1
)
ãã1 2
;
ãã2 3
}
åå 	
[
éé 	
Command
éé	 
(
éé 
$str
éé 
)
éé 
]
éé  
public
èè 
async
èè 
Task
èè 

Upsidesown
èè $
(
èè$ %
string
èè% +
url
èè, /
=
èè0 1
null
èè2 6
)
èè6 7
{
êê 	
var
ëë 
rurl
ëë 
=
ëë 

ResolveUrl
ëë !
(
ëë! "
url
ëë" %
)
ëë% &
;
ëë& '
using
íí 

HttpClient
íí 
client
íí #
=
íí$ %
new
íí& )

HttpClient
íí* 4
(
íí4 5
)
íí5 6
;
íí6 7
var
ìì 
	bytearray
ìì 
=
ìì 
await
ìì !
client
ìì" (
.
ìì( )
GetByteArrayAsync
ìì) :
(
ìì: ;
$"
ìì; =7
)http://imageapi:3000/upsidesown?imageurl=
ìì= f
{
ììf g
rurl
ììg k
}
ììk l
"
ììl m
)
ììm n
;
ììn o
var
îî 
stream
îî 
=
îî 
new
îî 
MemoryStream
îî )
(
îî) *
	bytearray
îî* 3
)
îî3 4
;
îî4 5
await
ïï 
Context
ïï 
.
ïï 
Channel
ïï !
.
ïï! "
SendFileAsync
ïï" /
(
ïï/ 0
stream
ïï0 6
,
ïï6 7
$str
ïï8 I
,
ïïI J
embed
ïïK P
:
ïïP Q
new
ïïR U
EmbedBuilder
ïïV b
(
ïïb c
)
ïïc d
.
ïïd e!
WithCopyrightFooter
ïïe x
(
ïïx y
)
ïïy z
.
ññ 
WithRandomColor
ññ  
(
ññ  !
)
ññ! "
.
óó 

WithAuthor
óó 
(
óó 
Context
óó #
.
óó# $
User
óó$ (
)
óó( )
.
óó) *
WithImageUrl
óó* 6
(
óó6 7
$str
óó7 U
)
óóU V
.
óóV W
Build
óóW \
(
óó\ ]
)
óó] ^
)
óó^ _
;
óó_ `
stream
òò 
.
òò 
Close
òò 
(
òò 
)
òò 
;
òò 
}
ôô 	
[
õõ 	
Command
õõ	 
(
õõ 
$str
õõ 
)
õõ 
]
õõ 
public
úú 
async
úú 
Task
úú 
Blur
úú 
(
úú 
string
úú %
url
úú& )
=
úú* +
null
úú, 0
)
úú0 1
{
ùù 	
var
ûû 
rurl
ûû 
=
ûû 

ResolveUrl
ûû !
(
ûû! "
url
ûû" %
)
ûû% &
;
ûû& '
using
üü 

HttpClient
üü 
client
üü #
=
üü$ %
new
üü& )

HttpClient
üü* 4
(
üü4 5
)
üü5 6
;
üü6 7
var
†† 
	bytearray
†† 
=
†† 
await
†† !
client
††" (
.
††( )
GetByteArrayAsync
††) :
(
††: ;
$"
††; =1
#http://imageapi:3000/blur?imageurl=
††= `
{
††` a
rurl
††a e
}
††e f
"
††f g
)
††g h
;
††h i
var
°° 
stream
°° 
=
°° 
new
°° 
MemoryStream
°° )
(
°°) *
	bytearray
°°* 3
)
°°3 4
;
°°4 5
await
¢¢ 
Context
¢¢ 
.
¢¢ 
Channel
¢¢ !
.
¢¢! "
SendFileAsync
¢¢" /
(
¢¢/ 0
stream
¢¢0 6
,
¢¢6 7
$str
¢¢8 B
,
¢¢B C
embed
¢¢D I
:
¢¢I J
new
¢¢K N
EmbedBuilder
¢¢O [
(
¢¢[ \
)
¢¢\ ]
.
¢¢] ^!
WithCopyrightFooter
¢¢^ q
(
¢¢q r
)
¢¢r s
.
££ 
WithRandomColor
££  
(
££  !
)
££! "
.
§§ 

WithAuthor
§§ 
(
§§ 
Context
§§ #
.
§§# $
User
§§$ (
)
§§( )
.
§§) *
WithImageUrl
§§* 6
(
§§6 7
$str
§§7 N
)
§§N O
.
§§O P
Build
§§P U
(
§§U V
)
§§V W
)
§§W X
;
§§X Y
}
•• 	
[
®® 	
Command
®®	 
(
®® 
$str
®® 
)
®® 
]
®® 
public
©© 
async
©© 
Task
©© 
RGB
©© 
(
©© 
string
©© $
url
©©% (
=
©©) *
null
©©+ /
)
©©/ 0
{
™™ 	
var
´´ 
rurl
´´ 
=
´´ 

ResolveUrl
´´ !
(
´´! "
url
´´" %
)
´´% &
;
´´& '
using
¨¨ 

HttpClient
¨¨ 
client
¨¨ #
=
¨¨$ %
new
¨¨& )

HttpClient
¨¨* 4
(
¨¨4 5
)
¨¨5 6
;
¨¨6 7
var
≠≠ 
	bytearray
≠≠ 
=
≠≠ 
await
≠≠ !
client
≠≠" (
.
≠≠( )
GetByteArrayAsync
≠≠) :
(
≠≠: ;
$"
≠≠; =0
"http://imageapi:3000/rgb?imageurl=
≠≠= _
{
≠≠_ `
rurl
≠≠` d
}
≠≠d e
"
≠≠e f
)
≠≠f g
;
≠≠g h
var
ÆÆ 
stream
ÆÆ 
=
ÆÆ 
new
ÆÆ 
MemoryStream
ÆÆ )
(
ÆÆ) *
	bytearray
ÆÆ* 3
)
ÆÆ3 4
;
ÆÆ4 5
await
ØØ 
Context
ØØ 
.
ØØ 
Channel
ØØ !
.
ØØ! "
SendFileAsync
ØØ" /
(
ØØ/ 0
stream
ØØ0 6
,
ØØ6 7
$str
ØØ8 A
,
ØØA B
embed
ØØC H
:
ØØH I
new
ØØJ M
EmbedBuilder
ØØN Z
(
ØØZ [
)
ØØ[ \
.
ØØ\ ]!
WithCopyrightFooter
ØØ] p
(
ØØp q
)
ØØq r
.
∞∞ 
WithRandomColor
∞∞  
(
∞∞  !
)
∞∞! "
.
±± 

WithAuthor
±± 
(
±± 
Context
±± #
.
±±# $
User
±±$ (
)
±±( )
.
±±) *
WithImageUrl
±±* 6
(
±±6 7
$str
±±7 M
)
±±M N
.
±±N O
Build
±±O T
(
±±T U
)
±±U V
)
±±V W
;
±±W X
stream
≤≤ 
.
≤≤ 
Close
≤≤ 
(
≤≤ 
)
≤≤ 
;
≤≤ 
}
≥≥ 	
[
µµ 	
Command
µµ	 
(
µµ 
$str
µµ 
)
µµ 
]
µµ 
public
∂∂ 
async
∂∂ 
Task
∂∂ 
	LevelCard
∂∂ #
(
∂∂# $
string
∂∂$ *
url
∂∂+ .
=
∂∂/ 0
null
∂∂1 5
)
∂∂5 6
{
∑∑ 	
var
∏∏ 
rurl
∏∏ 
=
∏∏ 

ResolveUrl
∏∏ !
(
∏∏! "
url
∏∏" %
)
∏∏% &
;
∏∏& '
using
ππ 

HttpClient
ππ 
client
ππ #
=
ππ$ %
new
ππ& )

HttpClient
ππ* 4
(
ππ4 5
)
ππ5 6
;
ππ6 7
var
∫∫ 
	bytearray
∫∫ 
=
∫∫ 
await
∫∫ !
client
∫∫" (
.
∫∫( )
GetByteArrayAsync
∫∫) :
(
∫∫: ;
$"
∫∫; =6
(http://imageapi:3000/levelcard?imageurl=
∫∫= e
{
∫∫e f
rurl
∫∫f j
}
∫∫j k
"
∫∫k l
)
∫∫l m
;
∫∫m n
var
ªª 
stream
ªª 
=
ªª 
new
ªª 
MemoryStream
ªª )
(
ªª) *
	bytearray
ªª* 3
)
ªª3 4
;
ªª4 5
await
ºº 
Context
ºº 
.
ºº 
Channel
ºº !
.
ºº! "
SendFileAsync
ºº" /
(
ºº/ 0
stream
ºº0 6
,
ºº6 7
$str
ºº8 G
,
ººG H
embed
ººI N
:
ººN O
new
ººP S
EmbedBuilder
ººT `
(
ºº` a
)
ººa b
.
ººb c!
WithCopyrightFooter
ººc v
(
ººv w
)
ººw x
.
ΩΩ 
WithRandomColor
ΩΩ  
(
ΩΩ  !
)
ΩΩ! "
.
ææ 

WithAuthor
ææ 
(
ææ 
Context
ææ #
.
ææ# $
User
ææ$ (
)
ææ( )
.
ææ) *
WithImageUrl
ææ* 6
(
ææ6 7
$str
ææ7 S
)
ææS T
.
ææT U
Build
ææU Z
(
ææZ [
)
ææ[ \
)
ææ\ ]
;
ææ] ^
stream
øø 
.
øø 
Close
øø 
(
øø 
)
øø 
;
øø 
}
¿¿ 	
private
¡¡ 
string
¡¡ 

ResolveUrl
¡¡ !
(
¡¡! "
string
¡¡" (
url
¡¡) ,
)
¡¡, -
{
¬¬ 	
if
√√ 
(
√√ 
url
√√ 
!=
√√ 
null
√√ 
)
√√ 
{
ƒƒ 
return
≈≈ 
HttpUtility
≈≈ "
.
≈≈" #
	UrlEncode
≈≈# ,
(
≈≈, -
url
≈≈- 0
)
≈≈0 1
;
≈≈1 2
}
∆∆ 
else
«« 
if
«« 
(
«« 
Context
«« 
.
«« 
Message
«« $
.
««$ %
Attachments
««% 0
.
««0 1
Count
««1 6
==
««7 9
$num
««: ;
)
««; <
{
»» 
return
…… 
HttpUtility
…… "
.
……" #
	UrlEncode
……# ,
(
……, -
$"
……- /
{
……/ 0
Context
……0 7
.
……7 8
Message
……8 ?
.
……? @
Attachments
……@ K
.
……K L
First
……L Q
(
……Q R
)
……R S
.
……S T
Url
……T W
}
……W X
	?size=480
……X a
"
……a b
)
……b c
;
……c d
}
   
else
ÀÀ 
{
ÃÃ 
return
ÕÕ 
HttpUtility
ÕÕ "
.
ÕÕ" #
	UrlEncode
ÕÕ# ,
(
ÕÕ, -
Context
ÕÕ- 4
.
ÕÕ4 5
User
ÕÕ5 9
.
ÕÕ9 :
AvatarId
ÕÕ: B
==
ÕÕC E
null
ÕÕF J
?
ÕÕK L
$"
ÕÕM O
{
ÕÕO P
Context
ÕÕP W
.
ÕÕW X
User
ÕÕX \
.
ÕÕ\ ]!
GetDefaultAvatarUrl
ÕÕ] p
(
ÕÕp q
)
ÕÕq r
}
ÕÕr s
"
ÕÕs t
:
ÕÕu v
$"
ÕÕw y2
#https://cdn.discordapp.com/avatars/ÕÕy ú
{ÕÕú ù
ContextÕÕù §
.ÕÕ§ •
UserÕÕ• ©
.ÕÕ© ™
IdÕÕ™ ¨
}ÕÕ¨ ≠
/ÕÕ≠ Æ
{ÕÕÆ Ø
ContextÕÕØ ∂
.ÕÕ∂ ∑
UserÕÕ∑ ª
.ÕÕª º
AvatarIdÕÕº ƒ
}ÕÕƒ ≈
.pngÕÕ≈ …
"ÕÕ…  
)ÕÕ  À
;ÕÕÀ Ã
}
ŒŒ 
}
œœ 	
}
–– 
}—— ˚
`C:\Users\Matthieu\source\repos\HeroBot-deux-point-z√©ro\HeroBot.Plugins.Images\PluginRefferal.cs
	namespace 	
HeroBot
 
. 
Plugins 
. 
HeroBot !
{ 
public 

class 
PluginRefferal 
:  !
IPluginRefferal" 1
{ 
} 
} 