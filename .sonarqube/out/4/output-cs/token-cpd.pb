Ò9
gC:\Users\Matthieu\source\repos\HeroBot-deux-point-z√©ro\HeroBot.Core\Helpers\ServiceCollectionHelper.cs
	namespace 	
HeroBot
 
. 
Core 
. 
Helpers 
{ 
public 

static 
class #
ServiceCollectionHelper /
{ 
public 
static 
IServiceCollection (1
%LoadAllServicesFromExternalAssembiles) N
(N O
thisO S
IServiceCollectionT f
servicesg o
,o p
IConfigurationRoot	p Ç
_config
É ä
)
ä ã
{ 	
var #
serviceProviderMigrateg '
=( )!
CreateserviceMigrator* ?
(? @
typeof@ F
(F G
Migration1270720191G Z
)Z [
.[ \
Assembly\ d
,d e
_confige l
)l m
;m n
using 
( 
var 
scope 
= #
serviceProviderMigrateg 6
.6 7
CreateScope7 B
(B C
)C D
)D E
{ 
( 
scope 
as 
IServiceProvider *
)* +
.+ ,
GetRequiredService, >
<> ?
IMigrationRunner? O
>O P
(P Q
)Q R
.R S
	MigrateUpS \
(\ ]
)] ^
;^ _
}   
ModulesService"" 
."" &
LoadAssembliesInDirrectory"" 5
(""5 6
)""6 7
;""7 8
List## 
<## 
AssemblyEntity## 
>##  
ass##! $
=##% &
RuntimeAssemblies##' 8
.##8 9
AssemblyEntities##9 I
.##I J
Values##J P
.##P Q
ToList##Q W
(##W X
)##X Y
;##Y Z
foreach%% 
(%% 
AssemblyEntity%% #
assembly%%$ ,
in%%- /
ass%%0 3
)%%3 4
{&& 
var'' 
assm'' 
='' 
assembly'' #
.''# $
Assembly''$ ,
;'', -
try(( 
{)) 
var++ "
serviceProviderMigrate++ .
=++/ 0!
CreateserviceMigrator++1 F
(++F G
assm++G K
,++K L
_config++L S
)++S T
;++T U
using-- 
var-- 
scope-- #
=--$ %"
serviceProviderMigrate--& <
.--< =
CreateScope--= H
(--H I
)--I J
;--J K
(.. 
scope.. 
as.. 
IServiceProvider.. .
)... /
.../ 0
GetRequiredService..0 B
<..B C
IMigrationRunner..C S
>..S T
(..T U
)..U V
...V W
	MigrateUp..W `
(..` a
)..a b
;..b c
}// 
catch00 
{00 
}00J K
IEnumerable11 
<11 
TypeInfo11 $
>11$ %
servicesAss11& 1
=112 3
assm114 8
.118 9
DefinedTypes119 E
.11E F
Where11F K
(11K L
x11L M
=>11N P
!11Q R
x11R S
.11S T
IsInterface11T _
&&11` b
!11c d
x11d e
.11e f
IsEnum11f l
&&11m o
x11p q
.11q r
IsClass11r y
&&11z |
x11} ~
.11~ 
IsPublic	11 á
&&
11à ä
x
11ã å
.
11å ç
Name
11ç ë
.
11ë í
Contains
11í ö
(
11ö õ
$str
11õ §
)
11§ •
)
11• ¶
;
11¶ ß
foreach22 
(22 
TypeInfo22 $
typeInfo22% -
in22. 0
servicesAss221 <
)22< =
services33  
.33  !
AddSingleton33! -
(33- .
assm33. 2
.332 3
GetTypes333 ;
(33; <
)33< =
.33= >
FirstOrDefault33> L
(33L M
x33M N
=>33O Q
x33R S
.33S T
Name33T X
==33Y [
typeInfo33\ d
.33d e
Name33e i
)33i j
)33j k
;33k l
}55 
return66 
services66 
;66 
}77 	
private== 
static== 
ServiceProvider== &!
CreateserviceMigrator==' <
(==< =
Assembly=== E
assembly==F N
,==N O
IConfigurationRoot==O a
_config==b i
)==i j
{>> 	
var?? 
coll?? 
=?? 
new?? 
ServiceCollection?? ,
(??, -
)??- .
;??. /
coll@@ 
.@@ !
AddFluentMigratorCore@@ &
(@@& '
)@@' (
.@@( )
ConfigureRunner@@) 8
(@@8 9
(@@9 :
x@@: ;
)@@; <
=>@@= ?
{AA 
xBB 
.BB 
AddPostgresBB 
(BB 
)BB 
.CC &
WithGlobalConnectionStringCC +
(CC+ ,
$"CC, .
Server=CC. 5
{CC5 6
_configCC6 =
.CC= >

GetSectionCC> H
(CCH I
$strCCI S
)CCS T
.CCT U

GetSectionCCU _
(CC_ `
$strCC` f
)CCf g
.CCg h
ValueCCh m
}CCm n
;Port=CCn t
{CCt u
_configCCu |
.CC| }

GetSection	CC} á
(
CCá à
$str
CCà í
)
CCí ì
.
CCì î

GetSection
CCî û
(
CCû ü
$str
CCü •
)
CC• ¶
.
CC¶ ß
Value
CCß ¨
}
CC¨ ≠

;Database=
CC≠ ∑
{
CC∑ ∏
assembly
CC∏ ¿
.
CC¿ ¡
GetName
CC¡ »
(
CC» …
)
CC…  
.
CC  À
Name
CCÀ œ
}
CCœ –
	;User Id=
CC– Ÿ
{
CCŸ ⁄
_config
CC⁄ ·
.
CC· ‚

GetSection
CC‚ Ï
(
CCÏ Ì
$str
CCÌ ˜
)
CC˜ ¯
.
CC¯ ˘

GetSection
CC˘ É
(
CCÉ Ñ
$str
CCÑ ä
)
CCä ã
.
CCã å

GetSection
CCå ñ
(
CCñ ó
$str
CCó ù
)
CCù û
.
CCû ü
Value
CCü §
}
CC§ •

;Password=
CC• Ø
{
CCØ ∞
_config
CC∞ ∑
.
CC∑ ∏

GetSection
CC∏ ¬
(
CC¬ √
$str
CC√ Õ
)
CCÕ Œ
.
CCŒ œ

GetSection
CCœ Ÿ
(
CCŸ ⁄
$str
CC⁄ ‡
)
CC‡ ·
.
CC· ‚

GetSection
CC‚ Ï
(
CCÏ Ì
$str
CCÌ ˜
)
CC˜ ¯
.
CC¯ ˘
Value
CC˘ ˛
}
CC˛ ˇ=
/;SslMode=Require;Trust Server Certificate=true;
CCˇ Æ
{
CCÆ Ø
$str
CCµ ∑
}
CC∑ ∏
Pooling=true;
CC∏ ≈
"
CC≈ ∆
)
CC∆ «
.DD 
ScanInDD 
(DD 
assemblyDD  
)DD  !
.DD! "
ForDD" %
.DD% &

MigrationsDD& 0
(DD0 1
)DD1 2
;DD2 3
}EE 
)EE 
;EE 
returnFF 
collFF 
.FF  
BuildServiceProviderFF ,
(FF, -
)FF- .
;FF. /
}GG 	
}HH 
}JJ Ê
eC:\Users\Matthieu\source\repos\HeroBot-deux-point-z√©ro\HeroBot.Core\Helpers\ServiceProviderHelper.cs
	namespace

 	
HeroBot


 
.

 
Core

 
.

 
Helpers

 
{ 
public 

static 
class !
ServiceProviderHelper -
{ 
public 
static 
ServiceProvider %0
$GetAllServicesFromExternalAssemblies& J
(J K
thisK O
ServiceProviderP _
services` h
)h i
{ 	
foreach 
( 
AssemblyEntity #
d$ %
in& (
RuntimeAssemblies) :
.: ;
AssemblyEntities; K
.K L
ValuesL R
)R S
{ 
Assembly 
ass 
= 
d  
.  !
Assembly! )
;) *
IEnumerable 
< 
TypeInfo $
>$ %
servicesAss& 1
=2 3
ass4 7
.7 8
DefinedTypes8 D
.D E
WhereE J
(J K
xK L
=>M O
!P Q
xQ R
.R S
IsInterfaceS ^
&&_ a
!b c
xc d
.d e
IsEnume k
&&l n
xo p
.p q
IsClassq x
&&y {
x| }
.} ~
IsPublic	~ Ü
&&
á â
x
ä ã
.
ã å
Name
å ê
.
ê ë
Contains
ë ô
(
ô ö
$str
ö £
)
£ §
)
§ •
;
• ¶
if 
( 
servicesAss 
.  
Any  #
(# $
)$ %
)% &
{ 
foreach 
( 
TypeInfo %
typeInfo& .
in/ 1
servicesAss2 =
)= >
{ 
services  
.  !
GetRequiredService! 3
(3 4
ass4 7
.7 8
GetTypes8 @
(@ A
)A B
.B C
FirstOrDefaultC Q
(Q R
xR S
=>T V
xW X
.X Y
NameY ]
==^ `
typeInfoa i
.i j
Namej n
)n o
)o p
;p q
} 
} 
}   
return!! 
services!! 
;!! 
}"" 	
}## 
}$$ ì
gC:\Users\Matthieu\source\repos\HeroBot-deux-point-z√©ro\HeroBot.Core\Migrations\Migration1_270720191.cs
	namespace 	
HeroBot
 
. 
Core 
. 

Migrations !
{ 
[ 
	Migration 
( 
$num 
) 
] 
public 

class 
Migration1270720191 $
:% &
	Migration' 0
{ 
public 
override 
void 
Down !
(! "
)" #
{		 	
Delete

 
.

 
Table

 
(

 
$str

 &
)

& '
;

' (
} 	
public 
override 
void 
Up 
(  
)  !
{ 	
Create 
. 
Table 
( 
$str &
)& '
. 

WithColumn 
( 
$str  
)  !
.! "
AsInt32" )
() *
)* +
.+ ,
Identity, 4
(4 5
)5 6
.6 7

PrimaryKey7 A
(A B
)B C
. 

WithColumn 
( 
$str $
)$ %
.% &
AsString& .
(. /
)/ 0
. 

WithColumn 
( 
$str #
)# $
.$ %
AsInt64% ,
(, -
)- .
. 

WithColumn 
( 
$str $
)$ %
.% &
AsString& .
(. /
)/ 0
.0 1
Nullable1 9
(9 :
): ;
;; <
} 	
} 
} “
OC:\Users\Matthieu\source\repos\HeroBot-deux-point-z√©ro\HeroBot.Core\Program.cs
	namespace 	
	HeroBotv2
 
{ 
static 

class 
Program 
{ 
public 
static 
Task 
Main 
(  
)  !
=> 
Startup 
. 
RunAsync 
(  
)  !
;! "
}		 
}

 ﬂ
YC:\Users\Matthieu\source\repos\HeroBot-deux-point-z√©ro\HeroBot.Core\RuntimeAssemblies.cs
	namespace 	
HeroBot
 
. 
Core 
{ 
public 

class 
RuntimeAssemblies "
{ 
public 
static 

Dictionary  
<  !
string! '
,' (
AssemblyEntity( 6
>6 7
AssemblyEntities8 H
{I J
getK N
;N O
}P Q
=R S
newT W

DictionaryX b
<b c
stringc i
,i j
AssemblyEntityk y
>y z
(z {
){ |
;| }
}		 
}

 ∂\
_C:\Users\Matthieu\source\repos\HeroBot-deux-point-z√©ro\HeroBot.Core\Services\CommandHandler.cs
	namespace 	
	HeroBotv2
 
. 
Services 
{ 
public 

class 
CommandHandler 
{ 
private 
readonly  
DiscordShardedClient -
_discord. 6
;6 7
private 
readonly 
CommandService '
	_commands( 1
;1 2
private 
readonly 
IConfigurationRoot +
_config, 3
;3 4
private 
readonly 
IServiceProvider )
	_provider* 3
;3 4
private 
readonly 
CooldownService (
	_cooldown) 2
;2 3
public 
CommandHandler 
(  
DiscordShardedClient  
discord! (
,( )
CommandService 
commands #
,# $
IConfigurationRoot 
config %
,% &
IServiceProvider 
provider %
,% &
CooldownService 
cooldownService +
)+ ,
{ 	
	_cooldown 
= 
cooldownService '
;' (
_discord 
= 
discord 
; 
	_commands 
= 
commands  
;  !
_config 
= 
config 
; 
	_provider   
=   
provider    
;    !
_discord"" 
."" 
MessageReceived"" $
+=""% '"
OnMessageReceivedAsync""( >
;""> ?
_discord## 
.## 
MessageUpdated## #
+=##$ &
OnMessageUpdated##' 7
;##7 8
}$$ 	
private&& 
Task&& 
OnMessageUpdated&& %
(&&% &
	Cacheable&&& /
<&&/ 0
IMessage&&0 8
,&&8 9
ulong&&: ?
>&&? @

oldMessage&&A K
,&&K L
SocketMessage&&M Z

newMessage&&[ e
,&&e f!
ISocketMessageChannel&&g |
messageChannel	&&} ã
)
&&ã å
{'' 	
return(( "
OnMessageReceivedAsync(( )
((() *

newMessage((* 4
)((4 5
;((5 6
})) 	
private++ 
async++ 
Task++ "
OnMessageReceivedAsync++ 1
(++1 2
SocketMessage++2 ?
s++@ A
)++A B
{,, 	
if.. 
(.. 
!.. 
(.. 
s.. 
is.. 
SocketUserMessage.. (
msg..) ,
).., -
)..- .
return../ 5
;..5 6
int00 
argPos00 
=00 
$num00 
;00 
if11 
(11 
msg11 
.11 
HasStringPrefix11 #
(11# $
_config11$ +
[11+ ,
$str11, 4
]114 5
,115 6
ref117 :
argPos11; A
)11A B
||11C E
msg11F I
.11I J
HasMentionPrefix11J Z
(11Z [
_discord11[ c
.11c d
CurrentUser11d o
,11o p
ref11q t
argPos11u {
)11{ |
)11| }
{22 
if33 
(33 
msg33 
.33 
Author33 
.33 
Id33 !
==33" $
_discord33% -
.33- .
CurrentUser33. 9
.339 :
Id33: <
||33= ?
msg33@ C
.33C D
Author33D J
.33J K
IsBot33K P
)33P Q
return33R X
;33X Y
if44 
(44 
!44 
(44 
msg44 
.44 
Channel44 !
is44" $
SocketGuildChannel44% 7
)447 8
)448 9
return44: @
;44@ A
var55 
context55 
=55 
new55 !#
CancelableSocketContext55" 9
(559 :
_discord55: B
.55B C
GetShardFor55C N
(55N O
(55O P
msg55P S
.55S T
Channel55T [
as55\ ^
SocketGuildChannel55_ q
)55q r
.55r s
Guild55s x
)55x y
,55y z
msg55{ ~
)55~ 
;	55 Ä
var66 
command66 
=66 
	_commands66 '
.66' (
Search66( .
(66. /
context66/ 6
,666 7
argPos668 >
)66> ?
;66? @
if77 
(77 
command77 
.77 
	IsSuccess77 %
)77% &
{77' (
var99 
cmd99 
=99 
command99 %
.99% &
Commands99& .
.99. /
First99/ 4
(994 5
)995 6
.996 7
Command997 >
;99> ?
var:: 
result:: 
=::  
await::! &
	_commands::' 0
.::0 1
ExecuteAsync::1 =
(::= >
context::> E
,::E F
argPos::G M
,::M N
	_provider::O X
)::X Y
;::Y Z
if;; 
(;; 
!;; 
result;; 
.;;  
	IsSuccess;;  )
);;) *
{<< 
switch== 
(==  
result==  &
.==& '
Error==' ,
)==, -
{>> 
case??  
CommandError??! -
.??- .
BadArgCount??. 9
:??9 :
await@@  %
s@@& '
.@@' (
Channel@@( /
.@@/ 0
SendMessageAsync@@0 @
(@@@ A
$"@@A CL
?Oops, it look like you made a syntax error in your command :/ `	@@C Ç
{
@@Ç É
_config
@@É ä
[
@@ä ã
$str
@@ã ì
]
@@ì î
}
@@î ï
{
@@ï ñ
(
@@ñ ó
cmd
@@ó ö
.
@@ö õ
Aliases
@@õ ¢
.
@@¢ £
Count
@@£ ®
>
@@© ™
$num
@@´ ¨
?
@@≠ Æ
$"
@@Ø ±
{
@@± ≤
$str
@@≤ µ
}
@@µ ∂
{
@@∂ ∑
string
@@∑ Ω
.
@@Ω æ
Join
@@æ ¬
(
@@¬ √
$str
@@√ ∆
,
@@∆ «
cmd
@@» À
.
@@À Ã
Aliases
@@Ã ”
)
@@” ‘
}
@@‘ ’
{
@@’ ÷
$str
@@÷ Ÿ
}
@@Ÿ ⁄
"
@@⁄ €
:
@@‹ ›
cmd
@@ﬁ ·
.
@@· ‚
Name
@@‚ Ê
)
@@Ê Á
}
@@Á Ë
{
@@È Í
string
@@Í 
.
@@ Ò
Join
@@Ò ı
(
@@ı ˆ
$str
@@ˆ ˘
,
@@˘ ˙
cmd
@@˚ ˛
.
@@˛ ˇ

Parameters
@@ˇ â
.
@@â ä
Select
@@ä ê
(
@@ê ë
p
@@ë í
=>
@@ì ï
p
@@ñ ó
.
@@ó ò

IsOptional
@@ò ¢
?
@@£ §
$"
@@• ß
[
@@ß ®
{
@@® ©
p
@@© ™
.
@@™ ´
Name
@@´ Ø
}
@@Ø ∞
{
@@∞ ±
(
@@± ≤
p
@@≤ ≥
.
@@≥ ¥
IsRemainder
@@¥ ø
?
@@¿ ¡
$str
@@¬ «
:
@@» …
String
@@  –
.
@@– —
Empty
@@— ÷
)
@@÷ ◊
}
@@◊ ÿ
]
@@ÿ Ÿ
"
@@Ÿ ⁄
:
@@€ ‹
$"
@@› ﬂ
<
@@ﬂ ‡
{
@@‡ ·
p
@@· ‚
.
@@‚ „
Name
@@„ Á
}
@@Á Ë
{
@@Ë È
(
@@È Í
p
@@Í Î
.
@@Î Ï
IsRemainder
@@Ï ˜
?
@@¯ ˘
$str
@@˙ ˇ
:
@@Ä Å
String
@@Ç à
.
@@à â
Empty
@@â é
)
@@é è
}
@@è ê
>
@@ê ë
"
@@ë í
)
@@í ì
)
@@ì î
}
@@î ï
`
@@ï ñ
"
@@ñ ó
)
@@ó ò
;
@@ò ô
breakAA  %
;AA% &
caseBB  
CommandErrorBB! -
.BB- .
ParseFailedBB. 9
:BB9 :
awaitCC  %
sCC& '
.CC' (
ChannelCC( /
.CC/ 0
SendMessageAsyncCC0 @
(CC@ A
$"CCA CL
?Oops, it look like you made a syntax error in your command :/ `	CCC Ç
{
CCÇ É
_config
CCÉ ä
[
CCä ã
$str
CCã ì
]
CCì î
}
CCî ï
{
CCï ñ
(
CCñ ó
cmd
CCó ö
.
CCö õ
Aliases
CCõ ¢
.
CC¢ £
Count
CC£ ®
>
CC© ™
$num
CC´ ¨
?
CC≠ Æ
$"
CCØ ±
{
CC± ≤
$str
CC≤ µ
}
CCµ ∂
{
CC∂ ∑
string
CC∑ Ω
.
CCΩ æ
Join
CCæ ¬
(
CC¬ √
$str
CC√ ∆
,
CC∆ «
cmd
CC» À
.
CCÀ Ã
Aliases
CCÃ ”
)
CC” ‘
}
CC‘ ’
{
CC’ ÷
$str
CC÷ Ÿ
}
CCŸ ⁄
"
CC⁄ €
:
CC‹ ›
cmd
CCﬁ ·
.
CC· ‚
Name
CC‚ Ê
)
CCÊ Á
}
CCÁ Ë
{
CCÈ Í
string
CCÍ 
.
CC Ò
Join
CCÒ ı
(
CCı ˆ
$str
CCˆ ˘
,
CC˘ ˙
cmd
CC˚ ˛
.
CC˛ ˇ

Parameters
CCˇ â
.
CCâ ä
Select
CCä ê
(
CCê ë
p
CCë í
=>
CCì ï
p
CCñ ó
.
CCó ò

IsOptional
CCò ¢
?
CC£ §
$"
CC• ß
[
CCß ®
{
CC® ©
p
CC© ™
.
CC™ ´
Name
CC´ Ø
}
CCØ ∞
{
CC∞ ±
(
CC± ≤
p
CC≤ ≥
.
CC≥ ¥
IsRemainder
CC¥ ø
?
CC¿ ¡
$str
CC¬ «
:
CC» …
String
CC  –
.
CC– —
Empty
CC— ÷
)
CC÷ ◊
}
CC◊ ÿ
]
CCÿ Ÿ
"
CCŸ ⁄
:
CC€ ‹
$"
CC› ﬂ
<
CCﬂ ‡
{
CC‡ ·
p
CC· ‚
.
CC‚ „
Name
CC„ Á
}
CCÁ Ë
{
CCË È
(
CCÈ Í
p
CCÍ Î
.
CCÎ Ï
IsRemainder
CCÏ ˜
?
CC¯ ˘
$str
CC˙ ˇ
:
CCÄ Å
String
CCÇ à
.
CCà â
Empty
CCâ é
)
CCé è
}
CCè ê
>
CCê ë
"
CCë í
)
CCí ì
)
CCì î
}
CCî ï
`
CCï ñ
"
CCñ ó
)
CCó ò
;
CCò ô
breakDD  %
;DD% &
caseEE  
CommandErrorEE! -
.EE- .
UnmetPreconditionEE. ?
:EE? @
awaitFF  %
sFF& '
.FF' (
ChannelFF( /
.FF/ 0
SendMessageAsyncFF0 @
(FF@ A
resultFFA G
.FFG H
ErrorReasonFFH S
)FFS T
;FFT U
breakGG  %
;GG% &
caseHH  
CommandErrorHH! -
.HH- .
	ExceptionHH. 7
:HH7 8
awaitII  %
sII& '
.II' (
ChannelII( /
.II/ 0
SendMessageAsyncII0 @
(II@ A
$strIIA e
)IIe f
;IIf g
breakJJ  %
;JJ% &
defaultKK #
:KK# $
awaitLL  %
sLL& '
.LL' (
ChannelLL( /
.LL/ 0
SendMessageAsyncLL0 @
(LL@ A
$"LLA C
Unknown error `LLC R
{LLR S
resultLLS Y
}LLY Z
`LLZ [
"LL[ \
)LL\ ]
;LL] ^
breakMM  %
;MM% &
}NN 
}PP 
elseQQ 
awaitRR 
	_cooldownRR '
.RR' (
	OnCommandRR( 1
(RR1 2
commandRR2 9
.RR9 :
CommandsRR: B
.RRB C
FirstRRC H
(RRH I
)RRI J
.RRJ K
CommandRRK R
,RRR S
contextRRT [
)RR[ \
;RR\ ]
}SS 
}TT 
}UU 	
}VV 
}WW ˚.
`C:\Users\Matthieu\source\repos\HeroBot-deux-point-z√©ro\HeroBot.Core\Services\CooldownService.cs
	namespace 	
HeroBot
 
. 
Core 
. 
Services 
{		 
public

 

class

 
CooldownService

  
:

! "
ICooldownService

# 3
{ 
private 
readonly 
IRedisService &
_redis' -
;- .
public 
CooldownService 
( 
IRedisService ,
redisService- 9
)9 :
{ 	
CooldownAttribute 
. 
	_cooldown '
=( )
this* .
;. /
_redis 
= 
redisService !
;! "
} 	
public 
async 
Task 
< 
TimeSpan "
?" #
># $
IsCommandCooldowned% 8
(8 9
ulong9 >
userid? E
,E F
stringG M
commandNameN Y
)Y Z
{ 	
return 
( 
await 
_redis  
.  !
GetDatabase! ,
(, -
)- .
.. /$
StringGetWithExpiryAsync/ G
(G H
$"H J
{J K
useridK Q
}Q R
-c-R U
{U V
commandNameV a
}a b
"b c
)c d
)d e
.e f
Expiryf l
;l m
} 	
public 
async 
Task 
< 
TimeSpan "
?" #
># $
IsModuleCooldowned% 7
(7 8
ulong8 =
userid> D
,D E
stringF L

moduleNameM W
)W X
{ 	
return 
( 
await 
_redis  
.  !
GetDatabase! ,
(, -
)- .
.. /$
StringGetWithExpiryAsync/ G
(G H
$"H J
{J K
useridK Q
}Q R
-m-R U
{U V

moduleNameV `
}` a
"a b
)b c
)c d
.d e
Expirye k
;k l
} 	
internal 
async 
Task 
	OnCommand %
(% &
CommandInfo& 1
commandInfo2 =
,= > 
SocketCommandContext? S
commandContextT b
)b c
{ 	
if   
(   
commandInfo   
.   
Preconditions   )
.  ) *
Any  * -
(  - .
x  . /
=>  0 2
x  3 4
is  5 7
CooldownAttribute  8 I
)  I J
)  J K
{!! 
var"" 
seconds"" 
="" 
("" 
commandInfo"" *
.""* +
Preconditions""+ 8
.""8 9
Where""9 >
(""> ?
x""? @
=>""A C
x""D E
is""F H
CooldownAttribute""I Z
)""Z [
.""[ \
OrderByDescending""\ m
(""m n
x""n o
=>""p r
(""s t
x""t u
as""v x
CooldownAttribute	""y ä
)
""ä ã
.
""ã å
cooldown
""å î
.
""î ï
Seconds
""ï ú
)
""ú ù
.
""ù û
First
""û £
(
""£ §
)
""§ •
as
""¶ ®
CooldownAttribute
""© ∫
)
""∫ ª
.
""ª º
cooldown
""º ƒ
;
""ƒ ≈
await## 
_redis## 
.## 
GetDatabase## (
(##( )
)##) *
.##* +
StringSetAsync##+ 9
(##9 :
$"##: <
{##< =
commandContext##= K
.##K L
User##L P
.##P Q
Id##Q S
}##S T
-c-##T W
{##W X
commandInfo##X c
.##c d
Name##d h
}##h i
"##i j
,##j k
String##l r
.##r s
Empty##s x
,##x y
seconds	##z Å
)
##Å Ç
;
##Ç É
}$$ 
if%% 
(%% 
commandInfo%% 
.%% 
Module%% "
.%%" #
Preconditions%%# 0
.%%0 1
Any%%1 4
(%%4 5
x%%5 6
=>%%7 9
x%%: ;
is%%< >
CooldownAttribute%%? P
)%%P Q
)%%Q R
{&& 
var'' 
seconds'' 
='' 
('' 
commandInfo'' *
.''* +
Module''+ 1
.''1 2
Preconditions''2 ?
.''? @
Where''@ E
(''E F
x''F G
=>''H J
x''K L
is''M O
CooldownAttribute''P a
)''a b
.''b c
OrderByDescending''c t
(''t u
x''u v
=>''w y
(''z {
x''{ |
as''} 
CooldownAttribute
''Ä ë
)
''ë í
.
''í ì
cooldown
''ì õ
.
''õ ú
Seconds
''ú £
)
''£ §
.
''§ •
First
''• ™
(
''™ ´
)
''´ ¨
as
''≠ Ø
CooldownAttribute
''∞ ¡
)
''¡ ¬
.
''¬ √
cooldown
''√ À
;
''À Ã
await(( 
_redis(( 
.(( 
GetDatabase(( (
(((( )
)(() *
.((* +
StringSetAsync((+ 9
(((9 :
$"((: <
{((< =
commandContext((= K
.((K L
User((L P
.((P Q
Id((Q S
}((S T
-m-((T W
{((W X
commandInfo((X c
.((c d
Module((d j
.((j k
Name((k o
}((o p
"((p q
,((q r
String((s y
.((y z
Empty((z 
,	(( Ä
seconds
((Å à
)
((à â
;
((â ä
})) 
}** 	
}++ 
},, À(
_C:\Users\Matthieu\source\repos\HeroBot-deux-point-z√©ro\HeroBot.Core\Services\HeroBotContext.cs
	namespace 	
HeroBot
 
. 
Core 
. 
Services 
{ 
public		 

class		 
HeroBotContext		 
:		  !
IDatabaseService		" 2
{

 
private 
readonly 
IConfigurationRoot +
_config, 3
;3 4
public 
HeroBotContext 
( 
IConfigurationRoot 0
confg1 6
)6 7
{ 	
_config 
= 
confg 
; 
} 	
public 
IDbConnection 
GetDbConnection ,
(, -
)- .
{ 	

StackTrace 

stackTrace !
=" #
new$ '

StackTrace( 2
(2 3
)3 4
;4 5

StackFrame 
[ 
] 
stackFrames $
=% &

stackTrace' 1
.1 2
	GetFrames2 ;
(; <
)< =
;= >
var 
assembly 
= 
stackFrames &
[& '
$num' (
]( )
.) *
	GetMethod* 3
(3 4
)4 5
.5 6
DeclaringType6 C
.C D
AssemblyD L
;L M
return 
new 
NpgsqlConnection '
(' (
$"( *
Server=* 1
{1 2
_config2 9
.9 :

GetSection: D
(D E
$strE O
)O P
.P Q

GetSectionQ [
([ \
$str\ b
)b c
.c d
Valued i
}i j
;Port=j p
{p q
_configq x
.x y

GetSection	y É
(
É Ñ
$str
Ñ é
)
é è
.
è ê

GetSection
ê ö
(
ö õ
$str
õ °
)
° ¢
.
¢ £
Value
£ ®
}
® ©

;Database=
© ≥
{
≥ ¥
assembly
¥ º
.
º Ω
GetName
Ω ƒ
(
ƒ ≈
)
≈ ∆
.
∆ «
Name
« À
}
À Ã
	;User Id=
Ã ’
{
’ ÷
_config
÷ ›
.
› ﬁ

GetSection
ﬁ Ë
(
Ë È
$str
È Û
)
Û Ù
.
Ù ı

GetSection
ı ˇ
(
ˇ Ä
$str
Ä Ü
)
Ü á
.
á à

GetSection
à í
(
í ì
$str
ì ô
)
ô ö
.
ö õ
Value
õ †
}
† °

;Password=
° ´
{
´ ¨
_config
¨ ≥
.
≥ ¥

GetSection
¥ æ
(
æ ø
$str
ø …
)
…  
.
  À

GetSection
À ’
(
’ ÷
$str
÷ ‹
)
‹ ›
.
› ﬁ

GetSection
ﬁ Ë
(
Ë È
$str
È Û
)
Û Ù
.
Ù ı
Value
ı ˙
}
˙ ˚J
<;SslMode=Require;Trust Server Certificate=true;Pooling=true;
˚ ∑
"
∑ ∏
)
∏ π
;
π ∫
} 	
public 
IDbConnection 
GetDbConnection ,
(, -
string- 3
v4 5
)5 6
{ 	
return 
new 
NpgsqlConnection '
(' (
$"( *
Server=* 1
{1 2
_config2 9
.9 :

GetSection: D
(D E
$strE O
)O P
.P Q

GetSectionQ [
([ \
$str\ b
)b c
.c d
Valued i
}i j
;Port=j p
{p q
_configq x
.x y

GetSection	y É
(
É Ñ
$str
Ñ é
)
é è
.
è ê

GetSection
ê ö
(
ö õ
$str
õ °
)
° ¢
.
¢ £
Value
£ ®
}
® ©

;Database=
© ≥
{
≥ ¥
v
¥ µ
}
µ ∂
	;User Id=
∂ ø
{
ø ¿
_config
¿ «
.
« »

GetSection
» “
(
“ ”
$str
” ›
)
› ﬁ
.
ﬁ ﬂ

GetSection
ﬂ È
(
È Í
$str
Í 
)
 Ò
.
Ò Ú

GetSection
Ú ¸
(
¸ ˝
$str
˝ É
)
É Ñ
.
Ñ Ö
Value
Ö ä
}
ä ã

;Password=
ã ï
{
ï ñ
_config
ñ ù
.
ù û

GetSection
û ®
(
® ©
$str
© ≥
)
≥ ¥
.
¥ µ

GetSection
µ ø
(
ø ¿
$str
¿ ∆
)
∆ «
.
« »

GetSection
» “
(
“ ”
$str
” ›
)
› ﬁ
.
ﬁ ﬂ
Value
ﬂ ‰
}
‰ ÂJ
<;SslMode=Require;Trust Server Certificate=true;Pooling=true;
Â °
"
° ¢
)
¢ £
;
£ §
} 	
} 
}   æ"
_C:\Users\Matthieu\source\repos\HeroBot-deux-point-z√©ro\HeroBot.Core\Services\LoggingService.cs
	namespace 	
	HeroBotv2
 
. 
Services 
{		 
public

 

class

 
LoggingService

 
{ 
public 
LoggingService 
(  
DiscordShardedClient 2
discord3 :
,: ;
CommandService< J
commandsK S
)S T
{ 	
discord 
. 
Log 
+= 

OnLogAsync %
;% &
commands 
. 
Log 
+= 

OnLogAsync &
;& '
} 	
public 
void 
Log 
( 
LogSeverity #
logSeverity$ /
,/ 0
string1 7
message8 ?
)? @
{ 	

StackTrace 

stackTrace !
=" #
new$ '

StackTrace( 2
(2 3
)3 4
;4 5

StackFrame 
[ 
] 
stackFrames $
=% &

stackTrace' 1
.1 2
	GetFrames2 ;
(; <
)< =
;= >
var 
assembly 
= 
stackFrames &
[& '
$num' (
]( )
.) *
	GetMethod* 3
(3 4
)4 5
.5 6
DeclaringType6 C
.C D
AssemblyD L
;L M
DisplayLogAsync 
( 
new 

LogMessage  *
(* +
logSeverity+ 6
,6 7
assembly8 @
.@ A
GetNameA H
(H I
)I J
.J K
NameK O
,O P
messageQ X
)X Y
)Y Z
.Z [
Wait[ _
(_ `
)` a
;a b
} 	
private 
async 
Task 

OnLogAsync %
(% &

LogMessage& 0
msg1 4
)4 5
{ 	

StackTrace 

stackTrace !
=" #
new$ '

StackTrace( 2
(2 3
)3 4
;4 5

StackFrame   
[   
]   
stackFrames   $
=  % &

stackTrace  ' 1
.  1 2
	GetFrames  2 ;
(  ; <
)  < =
;  = >
var"" 
assembly"" 
="" 
stackFrames"" &
[""& '
$num""' (
]""( )
."") *
	GetMethod""* 3
(""3 4
)""4 5
.""5 6
DeclaringType""6 C
.""C D
Assembly""D L
;""L M
await$$ 
DisplayLogAsync$$ !
($$! "
new$$" %

LogMessage$$& 0
($$0 1
msg$$1 4
.$$4 5
Severity$$5 =
,$$= >
assembly$$? G
.$$G H
GetName$$H O
($$O P
)$$P Q
.$$Q R
Name$$R V
,$$V W
msg$$X [
.$$[ \
Message$$\ c
,$$c d
msg$$e h
.$$h i
	Exception$$i r
)$$r s
)$$s t
;$$t u
}%% 	
private'' 
Task'' 
DisplayLogAsync'' $
(''$ %

LogMessage''% /
msg''0 3
)''3 4
{(( 	
string)) 
logText)) 
=)) 
$")) 
{))  
DateTime))  (
.))( )
UtcNow))) /
.))/ 0
ToString))0 8
())8 9
$str))9 C
)))C D
}))D E
 [))E G
{))G H
msg))H K
.))K L
Severity))L T
}))T U
] ))U W
{))W X
msg))X [
.))[ \
Source))\ b
}))b c
: ))c e
{))e f
msg))f i
.))i j
	Exception))j s
?))s t
.))t u
ToString))u }
())} ~
)))~ 
??
))Ä Ç
msg
))É Ü
.
))Ü á
Message
))á é
}
))é è
"
))è ê
;
))ê ë
return** 
Console** 
.** 
Out** 
.** 
WriteLineAsync** -
(**- .
logText**. 5
)**5 6
;**6 7
}++ 	
},, 
}-- éØ
_C:\Users\Matthieu\source\repos\HeroBot-deux-point-z√©ro\HeroBot.Core\Services\ModulesService.cs
	namespace 	
HeroBot
 
. 
Core 
. 
Services 
{ 
public 

sealed 
class 
ModulesService &
:' (
IModulesService) 8
{ 
private 
readonly 
IServiceProvider )
	_provider* 3
;3 4
private 
readonly 
CommandService '
_commandService( 7
;7 8
private 
readonly 
IDatabaseService )
	_database* 3
;3 4
private 
readonly 
LoggingService '
_logging( 0
;0 1
private 
readonly 
List 
< 
ToLoadAssembly ,
>, -
toLoadAssemblies. >
=? @
newA D
ListE I
<I J
ToLoadAssemblyJ X
>X Y
(Y Z
)Z [
;[ \
private 
readonly %
SimpleCacheImplementation 2&
_simpleCacheImplementation3 M
;M N
public 
ModulesService 
( %
SimpleCacheImplementation 8%
simpleCacheImplementation9 R
,R S
LoggingServiceS a
loggingb i
,i j
CommandServicek y
commandService	z à
,
à â
IServiceProvider
ä ö
provider
õ £
,
£ §
IDatabaseService
• µ
databaseService
∂ ≈
)
≈ ∆
{ 	&
_simpleCacheImplementation &
=' (%
simpleCacheImplementation) B
;B C
	_provider   
=   
provider    
;    !
_commandService!! 
=!! 
commandService!! ,
;!!, -
	_database"" 
="" 
databaseService"" '
;""' (
_logging## 
=## 
logging## 
;## #
FetchExternalAssemblies$$ #
($$# $
)$$$ %
;$$% &
}%% 	
internal'' 
static'' 
void'' &
LoadAssembliesInDirrectory'' 7
(''7 8
)''8 9
{(( 	
var)) 
path)) 
=)) 
Path)) 
.)) 
Combine)) #
())# $
	Directory))$ -
.))- .
GetCurrentDirectory)). A
())A B
)))B C
,))C D
$str))E N
)))N O
;))O P
if++ 
(++ 
!++ 
	Directory++ 
.++ 
Exists++ !
(++! "
path++" &
)++& '
)++' (
	Directory,, 
.,, 
CreateDirectory,, )
(,,) *
path,,* .
),,. /
;,,/ 0
var.. 
files.. 
=.. 
	Directory.. !
...! "
EnumerateFiles.." 0
(..0 1
path..1 5
)..5 6
...6 7
Where..7 <
(..< =
x..= >
=>..? A
x..B C
...C D
Contains..D L
(..L M
$str..M ^
)..^ _
).._ `
;..` a
foreach// 
(// 
var// 
file// 
in//  
files//! &
)//& '
{00 
if11 
(11 
!11 
file11 
.11 
Contains11 "
(11" #
$str11# )
)11) *
)11* +
continue22 
;22 
var44 
moduleContext44 !
=44" #
new44$ '
ModuleLoadContext44( 9
(449 :
)44: ;
;44; <
var55 
ass55 
=55 
moduleContext55 '
.55' ( 
LoadFromAssemblyPath55( <
(55< =
file55= A
)55A B
;55B C
RuntimeAssemblies66 !
.66! "
AssemblyEntities66" 2
.662 3
TryAdd663 9
(669 :
ass66: =
.66= >
GetName66> E
(66E F
)66F G
.66G H
Name66H L
,66L M
new66N Q
AssemblyEntity66R `
(66` a
)66a b
{66c d
Assembly66e m
=66n o
ass66p s
,66s t
Context66u |
=66} ~
moduleContext	66 å
}
66ç é
)
66é è
;
66è ê
}77 
}88 	
private:: 
void:: #
FetchExternalAssemblies:: ,
(::, -
)::- .
{;; 	
foreach<< 
(<< 
ToLoadAssembly<< #
ass<<$ '
in<<( *
toLoadAssemblies<<+ ;
)<<; <
{== 
var>> 
assembly>> 
=>> 
ass>> "
.>>" #
Assembly>># +
;>>+ ,
var?? 
name?? 
=?? 
assembly?? #
.??# $
GetName??$ +
(??+ ,
)??, -
.??- .
Name??. 2
.??2 3
SanitizAssembly??3 B
(??B C
)??C D
;??D E
var@@ 
classesRefferal@@ #
=@@$ %
assembly@@& .
.@@. /
DefinedTypes@@/ ;
.@@; <
Where@@< A
(@@A B
x@@B C
=>@@D F
!@@G H
x@@H I
.@@I J
IsInterface@@J U
&&@@V X
x@@Y Z
.@@Z [
IsPublic@@[ c
&&@@d f
!@@g h
x@@h i
.@@i j

IsAbstract@@j t
&&@@u w
x@@x y
.@@y z
Name@@z ~
==	@@ Å
$str
@@Ç í
)
@@í ì
;
@@ì î
ifAA 
(AA 
classesRefferalAA #
.AA# $
AnyAA$ '
(AA' (
)AA( )
)AA) *
{BB 
varCC 
PluginRefferalCC &
=CC' (
(CC) *
IPluginRefferalCC* 9
)CC9 :
classesRefferalCC: I
.CCI J
FirstCCJ O
(CCO P
)CCP Q
.CCQ R
GetConstructorsCCR a
(CCa b
)CCb c
.CCc d
FirstCCd i
(CCi j
)CCj k
.CCk l
InvokeCCl r
(CCr s
newCCs v
objectCCw }
[CC} ~
]CC~ 
{
CCÄ Å
}
CCÇ É
)
CCÉ Ñ
;
CCÑ Ö
varDD 
AssemblyEntityDD &
=DD' (
newDD) ,
AssemblyEntityDD- ;
(DD; <
)DD< =
{EE 
AssemblyFF  
=FF! "
assemblyFF# +
,FF+ ,
ContextGG 
=GG  !
assGG" %
.GG% &
AssemblyContextGG& 5
,GG5 6
ModuleHH 
=HH  
newHH! $
ListHH% )
<HH) *

ModuleInfoHH* 4
>HH4 5
(HH5 6
)HH6 7
,HH7 8
NameII 
=II 
nameII #
,II# $
pluginRefferalJJ &
=JJ' (
PluginRefferalJJ) 7
}KK 
;KK 
ifLL 
(LL 
RuntimeAssembliesLL )
.LL) *
AssemblyEntitiesLL* :
.LL: ;
AnyLL; >
(LL> ?
xLL? @
=>LLA C
xLLD E
.LLE F
ValueLLF K
.LLK L
NameLLL P
==LLQ S
nameLLT X
)LLX Y
)LLY Z
continueMM  
;MM  !
RuntimeAssembliesNN %
.NN% &
AssemblyEntitiesNN& 6
.NN6 7
TryAddNN7 =
(NN= >
nameNN> B
,NNB C
AssemblyEntityNND R
)NNR S
;NNS T
_loggingOO 
.OO 
LogOO  
(OO  !
LogSeverityOO! ,
.OO, -
InfoOO- 1
,OO1 2
$"OO3 5
Loaded OO5 <
{OO< =
nameOO= A
}OOA B
 vOOB D
{OOD E
assOOE H
.OOH I
AssemblyOOI Q
.OOQ R
GetNameOOR Y
(OOY Z
)OOZ [
.OO[ \
VersionOO\ c
}OOc d
 assembly modules.OOd v
"OOv w
)OOw x
;OOx y
ifPP 
(PP 
!PP 
RuntimeAssembliesPP *
.PP* +
AssemblyEntitiesPP+ ;
.PP; <
AnyPP< ?
(PP? @
)PP@ A
)PPA B
breakQQ 
;QQ 
}RR 
}SS 
}TT 	
publicVV 
asyncVV 
TaskVV #
TempUnloadAssemblyAsyncVV 1
(VV1 2
stringVV2 8
assemblyNameVV9 E
)VVE F
{WW 	
ifXX 
(XX 
!XX 
RuntimeAssembliesXX "
.XX" #
AssemblyEntitiesXX# 3
.XX3 4
TryGetValueXX4 ?
(XX? @
assemblyNameXX@ L
,XXL M
outXXN Q
varXXR U
contextXXV ]
)XX] ^
)XX^ _
returnYY 
;YY 
varZZ 
checkZZ 
=ZZ 
trueZZ 
;ZZ 
foreach[[ 
([[ 

ModuleInfo[[ 

moduleInfo[[  *
in[[+ -
context[[. 5
.[[5 6
Module[[6 <
)[[< =
{\\ 
if]] 
(]] 
check]] 
)]] 
check^^ 
=^^ 
await^^ !
_commandService^^" 1
.^^1 2
RemoveModuleAsync^^2 C
(^^C D

moduleInfo^^D N
)^^N O
;^^O P
}__ 
ifaa 
(aa 
!aa 
checkaa 
)aa 
{bb 
_loggingcc 
.cc 
Logcc 
(cc 
LogSeveritycc (
.cc( )
Errorcc) .
,cc. /
$"cc0 2
Failed to unload cc2 C
{ccC D
contextccD K
.ccK L
NameccL P
}ccP Q
 module.ccQ Y
"ccY Z
)ccZ [
;cc[ \
returndd 
;dd 
}ee 
contextgg 
.gg 
Contextgg 
.gg 
Unloadgg "
(gg" #
)gg# $
;gg$ %
_logginghh 
.hh 
Loghh 
(hh 
LogSeverityhh $
.hh$ %
Infohh% )
,hh) *
$"hh+ -
	Unloaded hh- 6
{hh6 7
contexthh7 >
.hh> ?
Namehh? C
}hhC D

 assembly.hhD N
"hhN O
)hhO P
;hhP Q
}ii 	
publickk 
asynckk 
Taskkk 
LoadAssemblyAsynckk +
(kk+ ,
stringkk, 2
assemblyNamekk3 ?
)kk? @
{ll 	
ifmm 
(mm 
!mm 
RuntimeAssembliesmm "
.mm" #
AssemblyEntitiesmm# 3
.mm3 4
TryGetValuemm4 ?
(mm? @
assemblyNamemm@ L
,mmL M
outmmN Q
varmmR U
contextmmV ]
)mm] ^
)mm^ _
returnnn 
;nn 
contextpp 
.pp 
Contextpp 
.pp  
LoadFromAssemblyNamepp 0
(pp0 1
contextpp1 8
.pp8 9
Assemblypp9 A
.ppA B
GetNameppB I
(ppI J
)ppJ K
)ppK L
;ppL M
awaitqq 
_commandServiceqq !
.qq! "
AddModulesAsyncqq" 1
(qq1 2
contextqq2 9
.qq9 :
Assemblyqq: B
,qqB C
	_providerqqD M
)qqM N
;qqN O
_loggingss 
.ss 
Logss 
(ss 
LogSeverityss $
.ss$ %
Infoss% )
,ss) *
$"ss+ -
Loaded ss- 4
{ss4 5
contextss5 <
.ss< =
Namess= A
}ssA B

 assembly.ssB L
"ssL M
)ssM N
;ssN O
}tt 	
internalvv 
asyncvv 
Taskvv *
LoadModulesFromAssembliesAsyncvv :
(vv: ;
)vv; <
{ww 	
foreachxx 
(xx 
varxx 
contextxx  
inxx! #
newxx$ '

Dictionaryxx( 2
<xx2 3
Stringxx3 9
,xx9 :
AssemblyEntityxx; I
>xxI J
(xxJ K
RuntimeAssembliesxxK \
.xx\ ]
AssemblyEntitiesxx] m
)xxm n
.xxn o
Valuesxxo u
)xxu v
{yy 
varzz 
	addModulezz 
=zz 
awaitzz  %
_commandServicezz& 5
.zz5 6
AddModulesAsynczz6 E
(zzE F
contextzzF M
.zzM N
AssemblyzzN V
,zzV W
	_providerzzX a
)zza b
;zzb c
context{{ 
.{{ 
Module{{ 
={{  
	addModule{{! *
.{{* +
ToList{{+ 1
({{1 2
){{2 3
;{{3 4
RuntimeAssemblies|| !
.||! "
AssemblyEntities||" 2
[||2 3
context||3 :
.||: ;
Assembly||; C
.||C D
GetName||D K
(||K L
)||L M
.||M N
Name||N R
.||R S
SanitizAssembly||S b
(||b c
)||c d
]||d e
=||f g
context||h o
;||o p
}}} 
} 	
public
ÄÄ 
AssemblyEntity
ÄÄ '
GetAssemblyEntityByModule
ÄÄ 7
(
ÄÄ7 8

ModuleInfo
ÄÄ8 B

moduleInfo
ÄÄC M
)
ÄÄM N
{
ÅÅ 	
while
ÇÇ 
(
ÇÇ 

moduleInfo
ÇÇ 
.
ÇÇ 
IsSubmodule
ÇÇ )
)
ÇÇ) *

moduleInfo
ÉÉ 
=
ÉÉ 

moduleInfo
ÉÉ '
.
ÉÉ' (
Parent
ÉÉ( .
;
ÉÉ. /
var
ÑÑ 
m
ÑÑ 
=
ÑÑ 
RuntimeAssemblies
ÑÑ %
.
ÑÑ% &
AssemblyEntities
ÑÑ& 6
;
ÑÑ6 7
return
ÖÖ 
m
ÖÖ 
.
ÖÖ 
First
ÖÖ 
(
ÖÖ 
x
ÖÖ 
=>
ÖÖ 
x
ÖÖ  !
.
ÖÖ! "
Value
ÖÖ" '
.
ÖÖ' (
Module
ÖÖ( .
.
ÖÖ. /
Any
ÖÖ/ 2
(
ÖÖ2 3
v
ÖÖ3 4
=>
ÖÖ5 7
v
ÖÖ8 9
==
ÖÖ: <

moduleInfo
ÖÖ= G
)
ÖÖG H
)
ÖÖH I
.
ÖÖI J
Value
ÖÖJ O
;
ÖÖO P
}
ÜÜ 	
private
áá 
readonly
áá 
string
áá $
GetGuildEnabledPlugins
áá  6
=
áá7 8
$str
áá9 o
;
ááo p
private
àà 
readonly
àà 
static
àà 
string
àà  &
InsertPlugin
àà' 3
=
àà4 5
$stràà6 Ç
;ààÇ É
private
ââ 
readonly
ââ 
static
ââ 
string
ââ  &
DeletePlugin
ââ' 3
=
ââ4 5
$strââ6 Å
;ââÅ Ç
public
ãã 
async
ãã 
Task
ãã 
<
ãã 
bool
ãã 
>
ãã 
IsPluginEnabled
ãã  /
(
ãã/ 0
IGuild
ãã0 6
guild
ãã7 <
,
ãã< =

ModuleInfo
ãã> H

moduleInfo
ããI S
)
ããS T
{
åå 	
var
çç  
moduleAssemblyName
çç "
=
çç# $'
GetAssemblyEntityByModule
çç% >
(
çç> ?

moduleInfo
çç? I
)
ççI J
;
ççJ K
if
éé 
(
éé  
moduleAssemblyName
éé "
.
éé" #
Assembly
éé# +
.
éé+ ,
GetName
éé, 3
(
éé3 4
)
éé4 5
.
éé5 6
Name
éé6 :
.
éé: ;
SanitizAssembly
éé; J
(
ééJ K
)
ééK L
==
ééM O
$str
ééP i
)
ééi j
return
éék q
true
éér v
;
éév w
PluginEnabling
èè 
[
èè 
]
èè 
cv
èè 
;
èè  
var
êê 
rd
êê 
=
êê 
await
êê (
_simpleCacheImplementation
êê 5
.
êê5 6
GetValueAsync
êê6 C
(
êêC D
$"
êêD F 
guildPluginsCache-
êêF X
{
êêX Y
guild
êêY ^
.
êê^ _
Id
êê_ a
}
êêa b
"
êêb c
)
êêc d
;
êêd e
if
ëë 
(
ëë 
!
ëë 
rd
ëë 
.
ëë 
HasValue
ëë 
)
ëë 
{
íí 
var
ìì 

connection
ìì 
=
ìì  
	_database
ìì! *
.
ìì* +
GetDbConnection
ìì+ :
(
ìì: ;
)
ìì; <
;
ìì< =
cv
îî 
=
îî 
(
îî 
await
îî 

connection
îî &
.
îî& '

QueryAsync
îî' 1
<
îî1 2
PluginEnabling
îî2 @
>
îî@ A
(
îîA B$
GetGuildEnabledPlugins
îîB X
,
îîX Y
new
îîZ ]
{
ïï 
guild
ññ 
=
ññ 
(
ññ 
long
ññ !
)
ññ! "
guild
ññ" '
.
ññ' (
Id
ññ( *
}
óó 
)
óó 
)
óó 
.
óó 
ToArray
óó 
(
óó 
)
óó 
;
óó 
await
òò (
_simpleCacheImplementation
òò 0
.
òò0 1
CacheValueAsync
òò1 @
(
òò@ A
$"
òòA C 
guildPluginsCache-
òòC U
{
òòU V
guild
òòV [
.
òò[ \
Id
òò\ ^
}
òò^ _
"
òò_ `
,
òò` a
JsonConvert
òòb m
.
òòm n
SerializeObject
òòn }
(
òò} ~
cvòò~ Ä
)òòÄ Å
)òòÅ Ç
;òòÇ É
}
ôô 
else
öö 
{
õõ 
cv
úú 
=
úú 
JsonConvert
úú  
.
úú  !
DeserializeObject
úú! 2
<
úú2 3
PluginEnabling
úú3 A
[
úúA B
]
úúB C
>
úúC D
(
úúD E
rd
úúE G
)
úúG H
;
úúH I
}
ùù 
if
ûû 
(
ûû 
!
ûû 
cv
ûû 
.
ûû 
Any
ûû 
(
ûû 
x
ûû 
=>
ûû 
x
ûû 
.
ûû 
Plugin
ûû %
==
ûû& ( 
moduleAssemblyName
ûû) ;
.
ûû; <
Assembly
ûû< D
.
ûûD E
GetName
ûûE L
(
ûûL M
)
ûûM N
.
ûûN O
Name
ûûO S
.
ûûS T
SanitizAssembly
ûûT c
(
ûûc d
)
ûûd e
)
ûûe f
)
ûûf g
{
üü 
return
†† 
false
†† 
;
†† 
}
°° 
return
¢¢ 
true
¢¢ 
;
¢¢ 
}
££ 	
public
•• 
async
•• 
Task
•• 
EnablePlugin
•• &
(
••& '
IGuild
••' -
guild
••. 3
,
••3 4

ModuleInfo
••5 ?

moduleInfo
••@ J
)
••J K
{
¶¶ 	
await
ßß (
_simpleCacheImplementation
ßß ,
.
ßß, -"
InvalidateValueAsync
ßß- A
(
ßßA B
$"
ßßB D 
guildPluginsCache-
ßßD V
{
ßßV W
guild
ßßW \
.
ßß\ ]
Id
ßß] _
}
ßß_ `
"
ßß` a
)
ßßa b
;
ßßb c
NpgsqlConnection
®® 
guildService
®® )
=
®®* +
(
®®, -
NpgsqlConnection
®®- =
)
®®= >
	_database
®®> G
.
®®G H
GetDbConnection
®®H W
(
®®W X
$str
®®X f
)
®®f g
;
®®g h
var
©© 
r
©© 
=
©© 
this
©© 
.
©© '
GetAssemblyEntityByModule
©© 2
(
©©2 3

moduleInfo
©©3 =
)
©©= >
.
©©> ?
Assembly
©©? G
.
©©G H
GetName
©©H O
(
©©O P
)
©©P Q
.
©©Q R
Name
©©R V
.
©©V W
SanitizAssembly
©©W f
(
©©f g
)
©©g h
;
©©h i
await
™™ 
guildService
™™ 
.
™™ 
ExecuteAsync
™™ +
(
™™+ ,
InsertPlugin
™™, 8
,
™™8 9
new
™™: =
{
´´ 
guild
¨¨ 
=
¨¨ 
(
¨¨ 
long
¨¨ 
)
¨¨ 
guild
¨¨ #
.
¨¨# $
Id
¨¨$ &
,
¨¨& '
plugin
≠≠ 
=
≠≠ 
r
≠≠ 
}
ÆÆ 
)
ÆÆ 
;
ÆÆ 
}
ØØ 	
public
±± 
async
±± 
Task
±± 
DisablePlugin
±± '
(
±±' (
IGuild
±±( .
guild
±±/ 4
,
±±4 5

ModuleInfo
±±6 @

moduleInfo
±±A K
)
±±K L
{
≤≤ 	
await
≥≥ (
_simpleCacheImplementation
≥≥ ,
.
≥≥, -"
InvalidateValueAsync
≥≥- A
(
≥≥A B
$"
≥≥B D 
guildPluginsCache-
≥≥D V
{
≥≥V W
guild
≥≥W \
.
≥≥\ ]
Id
≥≥] _
}
≥≥_ `
"
≥≥` a
)
≥≥a b
;
≥≥b c
NpgsqlConnection
¥¥ 
guildService
¥¥ )
=
¥¥* +
(
¥¥, -
NpgsqlConnection
¥¥- =
)
¥¥= >
	_database
¥¥> G
.
¥¥G H
GetDbConnection
¥¥H W
(
¥¥W X
$str
¥¥X f
)
¥¥f g
;
¥¥g h
var
µµ 
r
µµ 
=
µµ 
this
µµ 
.
µµ '
GetAssemblyEntityByModule
µµ 2
(
µµ2 3

moduleInfo
µµ3 =
)
µµ= >
.
µµ> ?
Assembly
µµ? G
.
µµG H
GetName
µµH O
(
µµO P
)
µµP Q
.
µµQ R
Name
µµR V
.
µµV W
SanitizAssembly
µµW f
(
µµf g
)
µµg h
;
µµh i
await
∂∂ 
guildService
∂∂ 
.
∂∂ 
ExecuteAsync
∂∂ +
(
∂∂+ ,
DeletePlugin
∂∂, 8
,
∂∂8 9
new
∂∂: =
{
∑∑ 
guild
∏∏ 
=
∏∏ 
(
∏∏ 
long
∏∏ 
)
∏∏ 
guild
∏∏ #
.
∏∏# $
Id
∏∏$ &
,
∏∏& '
plugin
ππ 
=
ππ 
r
ππ 
}
∫∫ 
)
∫∫ 
;
∫∫ 
}
ªª 	
}
ºº 
}ΩΩ Ê+
]C:\Users\Matthieu\source\repos\HeroBot-deux-point-z√©ro\HeroBot.Core\Services\RedisService.cs
	namespace 	
	HeroBotv2
 
. 
Services 
{ 
public 

class 
RedisService 
: 
IRedisService  -
{ 
private		 
readonly		 
LoggingService		 '
_loggingService		( 7
;		7 8
private

 
readonly

 
IConfigurationRoot

 +
_config

, 3
;

3 4
private 
ISubscriber 
_subscriber '
;' (
private 
IDatabaseAsync 
	_database (
;( )
public 
RedisService 
( 
LoggingService *
loggingService+ 9
,9 :
IConfigurationRoot; M
configurationRootN _
)_ `
{ 	
_loggingService 
= 
loggingService ,
;, -
_config 
= 
configurationRoot '
;' (
BeginConnection 
( 
) 
; 
} 	
private 
void 
BeginConnection $
($ %
)% &
{ 	
var 
config 
= 
new  
ConfigurationOptions 1
(1 2
)2 3
{4 5

ClientName 
= 
$str 1
,1 2
Password 
= 
_config "
." #

GetSection# -
(- .
$str. 5
)5 6
.6 7

GetSection7 A
(A B
$strB H
)H I
.I J

GetSectionJ T
(T U
$strU _
)_ `
.` a
Valuea f
,f g
DefaultDatabase 
=  !
int" %
.% &
Parse& +
(+ ,
_config, 3
.3 4

GetSection4 >
(> ?
$str? F
)F G
.G H

GetSectionH R
(R S
$strS ]
)] ^
.^ _
Value_ d
)d e
} 
; 
config 
. 
	EndPoints 
. 
Add  
(  !
$"! #
{# $
_config$ +
.+ ,

GetSection, 6
(6 7
$str7 >
)> ?
.? @

GetSection@ J
(J K
$strK Q
)Q R
.R S
ValueS X
}X Y
:Y Z
{Z [
_config[ b
.b c

GetSectionc m
(m n
$strn u
)u v
.v w

GetSection	w Å
(
Å Ç
$str
Ç à
)
à â
.
â ä
Value
ä è
}
è ê
"
ê ë
)
ë í
;
í ì
var 
redis 
= !
ConnectionMultiplexer -
.- .
Connect. 5
(5 6
config6 <
)< =
;= >
redis 
. 
ConnectionFailed "
+=# %
(& '
sender' -
,- .
evcent/ 5
)5 6
=>7 9
{ 
_loggingService 
.  
Log  #
(# $
Discord$ +
.+ ,
LogSeverity, 7
.7 8
Error8 =
,= >
$str? \
)\ ]
;] ^
}   
;   
redis!! 
.!! 
ConnectionRestored!! $
+=!!% '
(!!( )
sender!!) /
,!!/ 0
evcent!!1 7
)!!7 8
=>!!9 ;
{"" 
_loggingService## 
.##  
Log##  #
(### $
Discord##$ +
.##+ ,
LogSeverity##, 7
.##7 8
Warning##8 ?
,##? @
$str##A c
)##c d
;##d e
}$$ 
;$$ 
_subscriber%% 
=%% 
redis%% 
.%%  
GetSubscriber%%  -
(%%- .
)%%. /
;%%/ 0
_loggingService&& 
.&& 
Log&& 
(&&  
Discord&&  '
.&&' (
LogSeverity&&( 3
.&&3 4
Info&&4 8
,&&8 9
$str&&: X
)&&X Y
;&&Y Z
	_database'' 
='' 
redis'' 
.'' 
GetDatabase'' )
('') *
int''* -
.''- .
Parse''. 3
(''3 4
_config''4 ;
.''; <

GetSection''< F
(''F G
$str''G N
)''N O
[''O P
$str''P Z
]''Z [
)''[ \
,''\ ]
new''^ a
object''b h
{''i j
}''k l
)''l m
;''m n
_loggingService(( 
.(( 
Log(( 
(((  
Discord((  '
.((' (
LogSeverity((( 3
.((3 4
Info((4 8
,((8 9
$str((: Y
)((Y Z
;((Z [
})) 	
public++ 
ISubscriber++ 
GetSubscriber++ (
(++( )
)++) *
{,, 	
return-- 
_subscriber-- 
;-- 
}.. 	
public00 
IDatabaseAsync00 
GetDatabase00 )
(00) *
)00* +
{11 	
return22 
	_database22 
;22 
}33 	
}44 
}55 ˙<
_C:\Users\Matthieu\source\repos\HeroBot-deux-point-z√©ro\HeroBot.Core\Services\StartupService.cs
	namespace

 	
	HeroBotv2


 
.

 
Services

 
{ 
public 

class 
StartupService 
{ 
private 
readonly 
IServiceProvider )
	_provider* 3
;3 4
private 
readonly  
DiscordShardedClient -
_discord. 6
;6 7
private 
readonly 
CommandService '
	_commands( 1
;1 2
private 
readonly 
IConfigurationRoot +
_config, 3
;3 4
private 
int 
[ 
] 
ShardPresences $
;$ %
private 
readonly 
string 
[  
]  !
presence" *
=+ ,
new- 0
[0 1
]1 2
{3 4
$str !
,! "
$str +
,+ ,
$str #
,# $
$str *
,* +
$str  
} 	
;	 

private 
Task 
UpdatePresences $
{ 	
get 
{ 
return 
new 
Task 
(  
async  %
(& '
)' (
=>) +
{ 
while   
(   
true   
)    
{!! 
await"" 
Task"" "
.""" #
Delay""# (
(""( )
$num"") .
)"". /
;""/ 0
foreach## 
(##  !
DiscordSocketClient##! 4
discordSocketClient##5 H
in##I K
_discord##L T
.##T U
Shards##U [
)##[ \
{$$ 
if%% 
(%%  
discordSocketClient%%  3
.%%3 4
ConnectionState%%4 C
==%%D F
ConnectionState%%G V
.%%V W
	Connected%%W `
)%%` a
{&& 
if''  "
(''# $
discordSocketClient''$ 7
.''7 8
ShardId''8 ?
>''@ A
$num''B C
)''C D
{((  !
if))$ &
())' (
ShardPresences))( 6
[))6 7
discordSocketClient))7 J
.))J K
ShardId))K R
]))R S
==))T V
presence))W _
.))_ `
Length))` f
-))g h
$num))i j
)))j k
ShardPresences**( 6
[**6 7
discordSocketClient**7 J
.**J K
ShardId**K R
]**R S
=**T U
$num**V W
;**W X
else++$ (
ShardPresences,,( 6
[,,6 7
discordSocketClient,,7 J
.,,J K
ShardId,,K R
],,R S
++,,S U
;,,U V
await--$ )
discordSocketClient--* =
.--= >"
SetGamewithPlaceholder--> T
(--T U
_discord--U ]
,--] ^
presence--_ g
[--g h
ShardPresences--h v
[--v w 
discordSocketClient	--w ä
.
--ä ã
ShardId
--ã í
]
--í ì
]
--ì î
)
--î ï
;
--ï ñ
}..  !
else//  $
{00  !
if11$ &
(11' (
ShardPresences11( 6
[116 7
$num117 8
]118 9
==11: <
presence11= E
.11E F
Length11F L
-11M N
$num11O P
)11P Q
ShardPresences22( 6
[226 7
$num227 8
]228 9
=22: ;
$num22< =
;22= >
else33$ (
ShardPresences44( 6
[446 7
$num447 8
]448 9
++449 ;
;44; <
await55$ )
discordSocketClient55* =
.55= >"
SetGamewithPlaceholder55> T
(55T U
_discord55U ]
,55] ^
presence55_ g
[55g h
ShardPresences55h v
[55v w
$num55w x
]55x y
]55y z
)55z {
;55{ |
}66  !
}77 
}88 
}99 
}:: 
):: 
;:: 
};; 
}<< 	
public>> 
StartupService>> 
(>> 
IServiceProvider?? 
provider?? %
,??% & 
DiscordShardedClient@@  
discord@@! (
,@@( )
CommandServiceAA 
commandsAA #
,AA# $
IConfigurationRootBB 
configBB %
)BB% &
{CC 	
	_providerDD 
=DD 
providerDD  
;DD  !
_configEE 
=EE 
configEE 
;EE 
_discordFF 
=FF 
discordFF 
;FF 
	_commandsGG 
=GG 
commandsGG  
;GG  !
}HH 	
publicJJ 
asyncJJ 
TaskJJ 

StartAsyncJJ $
(JJ$ %
)JJ% &
{KK 	
stringLL 
discordTokenLL 
=LL  !
_configLL" )
[LL) *
$strLL* :
]LL: ;
;LL; <
ifMM 
(MM 
stringMM 
.MM 
IsNullOrWhiteSpaceMM )
(MM) *
discordTokenMM* 6
)MM6 7
)MM7 8
throwNN 
newNN #
InvalidProgramExceptionNN 1
(NN1 2
$str	NN2 ü
)
NNü †
;
NN† °
awaitPP 
_discordPP 
.PP 

LoginAsyncPP %
(PP% &
	TokenTypePP& /
.PP/ 0
BotPP0 3
,PP3 4
discordTokenPP5 A
)PPA B
;PPB C
awaitQQ 
_discordQQ 
.QQ 

StartAsyncQQ %
(QQ% &
)QQ& '
;QQ' (
ShardPresencesRR 
=RR 
newRR  
intRR! $
[RR$ %
_discordRR% -
.RR- .
ShardsRR. 4
.RR4 5
CountRR5 :
]RR: ;
;RR; <
UpdatePresencesSS 
.SS 
StartSS !
(SS! "
)SS" #
;SS# $
awaitTT 
	_commandsTT 
.TT 
AddModulesAsyncTT +
(TT+ ,
AssemblyTT, 4
.TT4 5
GetEntryAssemblyTT5 E
(TTE F
)TTF G
,TTG H
	_providerTTI R
)TTR S
;TTS T
}UU 	
}VV 
publicWW 

staticWW 
classWW )
DiscordShardedClientExtensionWW 5
{XX 
publicYY 
staticYY 
TaskYY "
SetGamewithPlaceholderYY 1
(YY1 2
thisYY2 6
DiscordSocketClientYY7 J
discordsocketYYK X
,YYX Y 
DiscordShardedClientYYZ n!
discordShardedClient	YYo É
,
YYÉ Ñ
string
YYÖ ã
str
YYå è
)
YYè ê
{ZZ 	
return[[ 
discordsocket[[  
.[[  !
SetGameAsync[[! -
([[- .
str[[. 1
.\\ 
Replace\\ 
(\\ 
$str\\ '
,\\' ( 
discordShardedClient\\) =
.\\= >
Guilds\\> D
.\\D E
Count\\E J
.\\J K
ToString\\K S
(\\S T
)\\T U
)\\U V
.]] 
Replace]] 
(]] 
$str]] '
,]]' ( 
discordShardedClient]]) =
.]]= >
Guilds]]> D
.]]D E
Sum]]E H
(]]H I
x]]I J
=>]]K M
x]]N O
.]]O P
Users]]P U
.]]U V
Count]]V [
)]][ \
.]]\ ]
ToString]]] e
(]]e f
)]]f g
)]]g h
)__ 
;__ 
}`` 	
}aa 
}bb ˘
gC:\Users\Matthieu\source\repos\HeroBot-deux-point-z√©ro\HeroBot.Core\Services\Structs\PluginEnabling.cs
	namespace 	
HeroBot
 
. 
Core 
. 
Services 
.  
Structs  '
{ 
struct 

PluginEnabling 
{ 
public 
ulong 
Guild 
; 
public 
string 
Plugin 
; 
} 
}

 Û
gC:\Users\Matthieu\source\repos\HeroBot-deux-point-z√©ro\HeroBot.Core\Services\Structs\ToLoadAssembly.cs
	namespace 	
HeroBot
 
. 
Core 
. 
Services 
.  
Structs  '
{ 
internal 
struct 
ToLoadAssembly "
{ 
public 
Assembly 
Assembly  
{! "
get# &
;& '
internal( 0
set1 4
;4 5
}6 7
public		 
ModuleLoadContext		  
AssemblyContext		! 0
{		1 2
get		3 6
;		6 7
internal		8 @
set		A D
;		D E
}		F G
}

 
} í:
OC:\Users\Matthieu\source\repos\HeroBot-deux-point-z√©ro\HeroBot.Core\Startup.cs
	namespace 	
	HeroBotv2
 
{ 
public 

class 
Startup 
{ 
public 
IConfigurationRoot !
Configuration" /
{0 1
get2 5
;5 6
}7 8
public 
Startup 
( 
) 
{ 	
NpgsqlLogManager 
. 
Provider %
=& '
new( +"
ConsoleLoggingProvider, B
(B C
NpgsqlLogLevelC Q
.Q R
InfoR V
,V W
trueX \
,\ ]
true^ b
)b c
;c d
var 
builder 
= 
new  
ConfigurationBuilder 2
(2 3
)3 4
. 
SetBasePath 
( 

AppContext '
.' (
BaseDirectory( 5
)5 6
. 
AddYamlFile 
( 
$str *
)* +
;+ ,
Configuration 
= 
builder #
.# $
Build$ )
() *
)* +
;+ ,
} 	
public 
static 
async 
Task  
RunAsync! )
() *
)* +
{ 	
var   
startup   
=   
new   
Startup   %
(  % &
)  & '
;  ' (
await!! 
startup!! 
.!! 
RunInternalAsync!! *
(!!* +
)!!+ ,
;!!, -
}"" 	
public$$ 
async$$ 
Task$$ 
RunInternalAsync$$ *
($$* +
)$$+ ,
{%% 	
var'' 
services'' 
='' 
new'' 
ServiceCollection'' 0
(''0 1
)''1 2
;''2 3
ConfigureServices(( 
((( 
services(( &
)((& '
;((' (
var)) 
provider)) 
=)) 
services)) #
.))# $ 
BuildServiceProvider))$ 8
())8 9
)))9 :
;)): ;
provider** 
.** 
GetRequiredService** '
<**' (
LoggingService**( 6
>**6 7
(**7 8
)**8 9
;**9 :
provider++ 
.++ 
GetRequiredService++ '
<++' (
IDatabaseService++( 8
>++8 9
(++9 :
)++: ;
;++; <
provider,, 
.,, 
GetRequiredService,, '
<,,' (
IRedisService,,( 5
>,,5 6
(,,6 7
),,7 8
;,,8 9
provider-- 
.-- 
GetRequiredService-- '
<--' (
ICooldownService--( 8
>--8 9
(--9 :
)--: ;
;--; <
provider.. 
... 
GetRequiredService.. '
<..' (
CooldownService..( 7
>..7 8
(..8 9
)..9 :
;..: ;
provider// 
.// 
GetRequiredService// '
<//' (%
SimpleCacheImplementation//( A
>//A B
(//B C
)//C D
;//D E
provider00 
.00 0
$GetAllServicesFromExternalAssemblies00 9
(009 :
)00: ;
;00; <
provider11 
.11 
GetRequiredService11 '
<11' (
CommandHandler11( 6
>116 7
(117 8
)118 9
;119 :
await22 
provider22 
.22 
GetRequiredService22 -
<22- .
StartupService22. <
>22< =
(22= >
)22> ?
.33 

StartAsync33 
(33 
)33 
;33 
await44 
(44 
(44 
ModulesService44 "
)44" #
provider44# +
.44+ ,
GetRequiredService44, >
<44> ?
IModulesService44? N
>44N O
(44O P
)44P Q
)44Q R
.55 *
LoadModulesFromAssembliesAsync55 /
(55/ 0
)550 1
;551 2
await66 
Task66 
.66 
Delay66 
(66 
-66 
$num66 
)66  
;66  !
}77 	
internal99 
void99 
ConfigureServices99 '
(99' (
IServiceCollection99( :
services99; C
)99C D
{:: 	
services;; 
.;; 
AddSingleton;; !
(;;! "
new;;" % 
DiscordShardedClient;;& :
(;;: ;
new;;; >
DiscordSocketConfig;;? R
{<< 
LogLevel== 
=== 
LogSeverity== &
.==& '
Info==' +
,==+ ,
MessageCacheSize>>  
=>>! "
$num>># %
,>>% &
AlwaysDownloadUsers?? #
=??$ %
false??& +
,??+ ,
ExclusiveBulkDelete@@ #
=@@$ %
true@@& *
,@@* +
LargeThresholdAA 
=AA  
$numAA! $
,AA$ %
}BB 
)BB 
)BB 
.CC 
AddSingletonCC 
(CC 
newCC 
CommandServiceCC ,
(CC, -
newCC- 0 
CommandServiceConfigCC1 E
{DD 
LogLevelEE 
=EE 
LogSeverityEE &
.EE& '
InfoEE' +
,EE+ ,
DefaultRunModeFF 
=FF  
RunModeFF! (
.FF( )
AsyncFF) .
,FF. /
}GG 
)GG 
)GG 
.JJ 
AddSingletonJJ 
<JJ 
IDatabaseServiceJJ *
,JJ* +
HeroBotContextJJ, :
>JJ: ;
(JJ; <
)JJ< =
.KK 
AddSingletonKK 
<KK %
SimpleCacheImplementationKK 3
>KK3 4
(KK4 5
)KK5 6
.LL 
AddSingletonLL 
<LL 
IRedisServiceLL '
,LL' (
RedisServiceLL) 5
>LL5 6
(LL6 7
)LL7 8
.MM 
AddSingletonMM 
<MM 
ICooldownServiceMM *
,MM* +
CooldownServiceMM, ;
>MM; <
(MM< =
)MM= >
.NN 
AddSingletonNN 
<NN 
CooldownServiceNN )
>NN) *
(NN* +
)NN+ ,
.OO 
AddSingletonOO 
<OO 
CommandHandlerOO (
>OO( )
(OO) *
)OO* +
.PP 
AddSingletonPP 
<PP 
StartupServicePP (
>PP( )
(PP) *
)PP* +
.QQ 
AddSingletonQQ 
<QQ 
LoggingServiceQQ (
>QQ( )
(QQ) *
)QQ* +
.RR 
AddSingletonRR 
<RR 
IModulesServiceRR )
,RR) *
ModulesServiceRR* 8
>RR8 9
(RR9 :
)RR: ;
.SS 
AddSingletonSS 
<SS 
RandomSS  
>SS  !
(SS! "
)SS" #
.TT 
AddSingletonTT 
(TT 
ConfigurationTT '
)TT' (
.UU 1
%LoadAllServicesFromExternalAssembilesUU 2
(UU2 3
ConfigurationUU3 @
)UU@ A
;UUA B
}VV 	
}WW 
}XX 